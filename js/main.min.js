!function(){"use strict";function t(t,e,o){t.otherwise("/"),o.state("login",{url:"/login",views:{"content@":{templateUrl:"html/login/login.index.html",controller:"LoginController",controllerAs:"login"}}}).state("login.register",{url:"/register",views:{"content@":{templateUrl:"html/register/register.index.html",controller:"RegisterController",controllerAs:"register"}}}).state("app",{url:"/content",views:{menu:{templateUrl:"html/menu/menu.index.html",controller:"MenuController",controllerAs:"menuData"},"content@":{templateUrl:"html/content/content.index.html",controller:"Contentcontroller",controllerAs:"content"}}})}function e(t,e,o,n){t.globals=o.get("globals")||{},t.globals.currentUser&&(n.defaults.headers.common.Authorization="Basic"+t.globals.currentUser.authdata),t.$on("$locationChangeStart",function(o,n,l){var a=-1===$.inArray(e.path(),["/login"]),r=t.globals.currentUser;a&&!r&&e.path("/login")})}angular.module("app",[]);angular.module("app",["ui.router","ngAnimate","ngResource","ngCookies","app.api","app.global","app.menu","app.login","app.register","app.main","app.utility","app.alltodo","app.next","app.today","app.content","app.archive"]).constant("sitename","applocal").constant("apibase","http://localhost:3000").constant("apiversion","/v1.0").config(t).run(e),t.$inject=["$urlRouterProvider","$httpProvider","$stateProvider"],e.$inject=["$rootScope","$location","$cookieStore","$http"]}(),function(){"use strict";function t(){return{isError:function(t){return 1==t?!0:!1}}}function e(t,e){return t(e+"/mainmenu",{},{get:{method:"GET"},save:{method:"POST"},query:{method:"GET",isArray:!0},"delete":{method:"DELETE"}})}function o(t,e){return t(e+"/project",{},{get:{method:"GET"},save:{method:"POST"},query:{method:"GET",isArray:!0},"delete":{method:"DELETE"}})}function n(t,e){return t(e+"/labels",{},{get:{method:"GET"},save:{method:"POST"},query:{method:"GET",isArray:!0},"delete":{method:"DELETE"}})}function l(t,e){return t(e+"/filters",{},{get:{method:"GET"},save:{method:"POST"},query:{method:"GET",isArray:!0},"delete":{method:"DELETE"}})}function a(t,e){var o=function(t){return t=angular.fromJson(t),t.dateNum=new Date(t.dateNum),t};return t(e+"/task/:id",{id:"@id"},{get:{method:"GET",transformResponse:o},save:{method:"POST"},update:{method:"PUT"},query:{method:"GET",isArray:!0},remove:{method:"DELETE"},"delete":{method:"DELETE"}})}function r(){var t=[],e=function(e){t=[],t.push(e)},o=function(){return t};return{addIdData:e,getIdData:o}}angular.module("app.api",[]),angular.module("app.api").factory("Statuscode",t),angular.module("app.api").factory("Menulist",e),e.$inject=["$resource","apibase"],angular.module("app.api").factory("Projectlist",o),o.$inject=["$resource","apibase"],angular.module("app.api").factory("Projectlabel",n),n.$inject=["$resource","apibase"],angular.module("app.api").factory("Projectfilter",l),l.$inject=["$resource","apibase"],angular.module("app.api").factory("Alltasks",a),a.$inject=["$resource","apibase"],angular.module("app.api").service("isId",r)}(),function(){"use strict";angular.module("app.global",[]).filter("pagination",function(){return function(t,e){return e=+e,t.slice(e)}})}(),function(){"use strict";function t(t){}function e(){function t(t,e,o){e.on("click",function(){$(".wrapper").toggleClass("panelAnimates"),e.find("span").html("Open"==$(".closeBtn span").text()?"Close":"Open")})}var e={link:t,restrict:"A"};return e}angular.module("app.content",[]).controller("Contentcontroller",t).directive("toggleElm",e),t.$inject=["$scope"]}(),function(){"use strict";function t(){}angular.module("app.login",[]).controller("LoginController",t)}(),function(){"use strict";function t(){}angular.module("app.main",[]).controller("MainController",t)}(),function(){"use strict";function t(t,e,o,n,l){var a=this;a.menuList=t.query(),a.projectList=e.query(),a.projectLabel=o.query(),a.projectFilter=n.query()}function e(){function t(t,e,o){e.on("click",function(){var t=$(".content .closeBtn").find("span");$(".wrapper").toggleClass("panelAnimates"),t.html("Close"==t.text()?"Open":"Close")})}var e={link:t,restrict:"A"};return e}angular.module("app.menu",[]).controller("MenuController",t).directive("elmPanel",e),t.$inject=["Menulist","Projectlist","Projectlabel","Projectfilter","$stateParams"]}(),function(){"user strict";function t(){}angular.module("app.register",[]).controller("RegisterController",t)}(),function(){"use strict";function t(){var t=this;t.time=new Date}angular.module("app.utility",[]).controller("UtilitiesController",t)}(),function(){"use strict";function t(t){t.state("app.all",{url:"/alltask/:id",views:{"utilities@app":{templateUrl:"html/utilities/utilities.index.html",controller:"UtilitiesController",controllerAs:"utilities"},"main@app":{params:["id"],templateUrl:"html/main/main.all/all.index.html",controller:"AlltaskController",controllerAs:"todo"}}})}function e(t,e,o){var n=this;n.numberCurrent=0,n.pageSize=3,n.allTasks=t.query(),n.numberOfPages=function(){return Math.ceil(n.allTasks.length/n.pageSize)},n.removeTask=function(e){t["delete"]({},{id:e.id},function(){n.allTasks=t.query()})},n.editTask=function(t){o.addIdData(t.id),e.go("app.edit")}}angular.module("app.alltodo",["app.alltodo.create","app.alltodo.edit"]).config(t).controller("AlltaskController",e),t.$inject=["$stateProvider"],e.$inject=["Alltasks","$state","isId"]}(),function(){"use strict";function t(t,e){t.state("app.archive",{url:"/archive",views:{"utilities@app":{templateUrl:"html/utilities/utilities.index.html",controller:"UtilitiesController",controllerAs:"utilities"},"main@app":{templateUrl:"html/main/main.archived/archived.index.html",controller:"controllerArchive",controllerAs:"archived"}}})}function e(){}angular.module("app.archive",[]).config(t).controller("controllerArchive",e),t.$inject=["$stateProvider","$urlRouterProvider"]}(),function(){"use strict";function t(t,e){t.state("app.next",{url:"/next/:id",views:{"utilities@app":{templateUrl:"html/utilities/utilities.index.html",controller:"UtilitiesController",controllerAs:"utilities"},"main@app":{templateUrl:"html/main/main.taskSeven/seven.index.html",controller:"controllerNextDays",controllerAs:"nextSeven"}}})}function e(t,e,o){var n=this;n.todayDate=moment().format("L"),n.weekDate=moment().weekday(7).format("L"),n.nextSevenEvents=t.query({},function(){var t=[];angular.forEach(n.nextSevenEvents,function(e,o){moment(e.dateNum).format("L")>=n.todayDate&&moment(e.dateNum).format("L")<=n.weekDate&&t.push(e)}),n.nextSevenEvents=t}),n.removeTask=function(e){t["delete"]({},{id:e.id},function(){AlltaskController.allTasks=t.query()})},n.editTask=function(t){o.addIdData(t.id),e.go("app.edit")}}angular.module("app.next",[]).config(t).controller("controllerNextDays",e),t.$inject=["$stateProvider","$urlRouterProvider"],e.$inject=["Alltasks","$state","isId"]}(),function(){"use strict";function t(t,e){t.state("app.today",{url:"/today",views:{"utilities@app":{templateUrl:"html/utilities/utilities.index.html",controller:"UtilitiesController",controllerAs:"utilities"},"main@app":{templateUrl:"html/main/main.today/today.index.html",controller:"TodayController",controllerAs:"today"}}})}function e(t,e,o){var n=this;n.todayDate=moment().format("L"),n.todoTasks=t.query({},function(){var t=[];angular.forEach(n.todoTasks,function(e,o){n.todayDate==moment(e.dateNum).format("L")&&t.push(e)}),n.todoTasks=t}),n.removeTask=function(e){t["delete"]({},{id:e.id},function(){AlltaskController.allTasks=t.query()})},n.editTask=function(t){o.addIdData(t.id),e.go("app.edit")}}angular.module("app.today",[]).config(t).controller("TodayController",e),t.$inject=["$stateProvider","$urlRouterProvider"],e.$inject=["Alltasks","$state","isId"]}(),function(){"use strict";function t(t){t.state("app.edit",{url:"/alltask/edit",views:{"overlay@":{templateUrl:"/html/main/main.all/edit.all/edit.all.html",controller:"EdittodoController",controllerAs:"editTodo"},"main@app":{templateUrl:"html/main/main.all/all.index.html",controller:"AlltaskController",controllerAs:"todo"}}})}function e(t,e,o){var n=this,l=t.getIdData();n.idEdit=l[0],n.task=e.get({},{id:l[0]}),n.editTask=function(){n.newTask={id:l[0],project:n.task.project,label:n.task.label,name:n.task.name,dateNum:n.task.dateNum,headerComment:n.task.headerComment,comment:n.task.comment,done:n.task.done},n.newTask.dateNum=new Date(n.task.dateNum),e.update(n.newTask),o.go("app.all")},n.cancelEdit=function(){o.go("app.all")}}angular.module("app.alltodo.edit",["app.alltodo"]).config(t).controller("EdittodoController",e),t.$inject=["$stateProvider"],e.$inject=["isId","Alltasks","$state"]}(),function(){"use strict";function t(t){t.state("app.create",{url:"/alltask/create",views:{"overlay@":{templateUrl:"/html/main/main.all/create.all/create.all.html",controller:"CreatetodoController",controllerAs:"createTodo"},"main@app":{templateUrl:"html/main/main.all/all.index.html",controller:"AlltaskController",controllerAs:"todo"}}})}function e(t,e,o){var n=this;n.submitted=!1,n.priority=e.query(),n.user=o.query({},function(){var t=[];angular.forEach(n.user,function(e,o){t.push(n.user[o].name)}),n.user=t}),n.createTask=function(){n.formAddTasks.$valid?(n.data={},n.data={project:n.project,label:n.label,name:n.name,dateNum:n.dateNum,headerComment:n.headerComment,comment:n.comment,done:n.done},console.log(n.data.done),t.save(n.data),$("form").find("input").val(""),$("p.msg-error").removeClass("msg-error")):($("form").find("p").addClass("msg-error"),n.submitted=!0)},n.resetVal=function(){$("form").find("input").val("")}}angular.module("app.alltodo.create",["app.alltodo"]).config(t).controller("CreatetodoController",e),t.$inject=["$stateProvider"],e.$inject=["Alltasks","Projectlabel","User"]}();
//# sourceMappingURL=data:application/json;base64,