!function(){"use strict";function t(t,e,n){t.otherwise("/"),n.state("login",{url:"",views:{"content@":{templateUrl:"html/login/login.index.html",controller:"LoginController",controllerAs:"login"}}}).state("app",{url:"/content",views:{menu:{templateUrl:"html/menu/menu.index.html",controller:"MenuController",controllerAs:"menuData"},"content@":{templateUrl:"html/content/content.index.html",controller:"Contentcontroller",controllerAs:"content"}}})}angular.module("app",[]);angular.module("app",["ui.router","ngAnimate","ngResource","app.api","app.global","app.menu","app.login","app.main","app.utility","app.alltodo","app.next","app.today","app.content"]).constant("sitename","applocal").constant("apibase","http://localhost:3000").constant("apiversion","/v1.0").config(t),t.$inject=["$urlRouterProvider","$httpProvider","$stateProvider"]}(),function(){"use strict";function t(t,e){return t(e+"/userlogin",{},{get:{method:"GET",isArray:!0}})}function e(){var t;return console.log(1==t?!0:!1),{isError:function(t){return 1==t?!0:!1}}}function n(){var t;return{get:function(){return t=localStorage.getItem("id_token")},set:function(e){return localStorage.setItem("id_token",e),t=e}}}function l(t,e){return t(e+"/mainmenu",{},{get:{method:"GET"},save:{method:"POST"},query:{method:"GET",isArray:!0},"delete":{method:"DELETE"}})}function o(t,e){return t(e+"/project",{},{get:{method:"GET"},save:{method:"POST"},query:{method:"GET",isArray:!0},"delete":{method:"DELETE"}})}function a(t,e){return t(e+"/labels",{},{get:{method:"GET"},save:{method:"POST"},query:{method:"GET",isArray:!0},"delete":{method:"DELETE"}})}function r(t,e){return t(e+"/filters",{},{get:{method:"GET"},save:{method:"POST"},query:{method:"GET",isArray:!0},"delete":{method:"DELETE"}})}function i(t,e){var n=function(t){return t=angular.fromJson(t),t.dateNum=new Date(t.dateNum),t};return t(e+"/task/:id",{id:"@id"},{get:{method:"GET",transformResponse:n},save:{method:"POST"},update:{method:"PUT"},query:{method:"GET",isArray:!0},remove:{method:"DELETE"},"delete":{method:"DELETE"}})}function u(){var t=[],e=function(e){t.push(e)},n=function(){return t};return{addIdData:e,getIdData:n}}angular.module("app.api",[]),angular.module("app.api").factory("Login",t),t.$inject=["$resource","apibase"],angular.module("app.api").factory("Statuscode",e),angular.module("app.api").factory("Token",n),angular.module("app.api").factory("Menulist",l),l.$inject=["$resource","apibase"],angular.module("app.api").factory("Projectlist",o),o.$inject=["$resource","apibase"],angular.module("app.api").factory("Projectlabel",a),a.$inject=["$resource","apibase"],angular.module("app.api").factory("Projectfilter",r),r.$inject=["$resource","apibase"],angular.module("app.api").factory("Alltasks",i),i.$inject=["$resource","apibase"],angular.module("app.api").service("isId",u)}(),function(){"use strict";angular.module("app.global",[]).filter("pagination",function(){return function(t,e){return e=+e,t.slice(e)}})}(),function(){"use strict";function t(t){}function e(){function t(t,e,n){e.on("click",function(){$(".wrapper").toggleClass("panelAnimates"),e.find("span").html("Open"==$(".closeBtn span").text()?"Close":"Open")})}var e={link:t,restrict:"A"};return e}angular.module("app.content",[]).controller("Contentcontroller",t).directive("toggleElm",e),t.$inject=["$scope"]}(),function(){"use strict";function t(t,e){var n=this;n.submitted=!1,n.submitLogin=function(){n.userlogin={},n.userlogin={email:n.email,pass:n.pass};var l=[];l=e.get(n.userlogin,function(){"undefined"==typeof n.userlogin.email?a():o()});var o=function(){t.go("app")},a=function(){$(".errorLogin").css({display:"block"})};$("input").val("")}}angular.module("app.login",[]).controller("LoginController",t),t.$inject=["$state","Login"]}(),function(){"use strict";function t(){}angular.module("app.main",[]).controller("MainController",t)}(),function(){"use strict";function t(t,e,n,l,o){var a=this;a.menuList=t.query(),a.projectList=e.query(),a.projectLabel=n.query(),a.projectFilter=l.query()}function e(){function t(t,e,n){e.on("click",function(){var t=$(".content .closeBtn").find("span");$(".wrapper").toggleClass("panelAnimates"),t.html("Close"==t.text()?"Open":"Close")})}var e={link:t,restrict:"A"};return e}angular.module("app.menu",[]).controller("MenuController",t).directive("elmPanel",e),t.$inject=["Menulist","Projectlist","Projectlabel","Projectfilter","$stateParams"]}(),function(){"use strict";function t(){var t=this;t.time=new Date}angular.module("app.utility",[]).controller("UtilitiesController",t)}(),function(){"use strict";function t(t){t.state("app.all",{url:"/alltask/:id",views:{"utilities@app":{templateUrl:"html/utilities/utilities.index.html",controller:"UtilitiesController",controllerAs:"utilities"},"main@app":{params:["id"],templateUrl:"html/main/main.all/all.index.html",controller:"AlltaskController",controllerAs:"todo"}}})}function e(t,e,n){var l=this;l.numberCurrent=0,l.pageSize=3,l.allTasks=t.query(),l.numberOfPages=function(){return Math.ceil(l.allTasks.length/l.pageSize)},l.removeTask=function(e){t["delete"]({},{id:e.id},function(){l.allTasks=t.query()})},l.editTask=function(t){n.addIdData(t.id),e.go("app.edit")}}angular.module("app.alltodo",["app.alltodo.create","app.alltodo.edit"]).config(t).controller("AlltaskController",e),t.$inject=["$stateProvider"],e.$inject=["Alltasks","$state","isId"]}(),function(){"use strict";function t(t,e){t.state("app.next",{url:"/next/:id",views:{"utilities@app":{templateUrl:"html/utilities/utilities.index.html",controller:"UtilitiesController",controllerAs:"utilities"},"main@app":{templateUrl:"html/main/main.taskSeven/seven.index.html",controller:"NextController",controllerAs:"next"}}})}function e(){}angular.module("app.next",[]).config(t).controller("NextController",e),t.$inject=["$stateProvider","$urlRouterProvider"]}(),function(){"use strict";function t(t,e){t.state("app.today",{url:"/today",views:{"utilities@app":{templateUrl:"html/utilities/utilities.index.html",controller:"UtilitiesController",controllerAs:"utilities"},"main@app":{templateUrl:"html/main/main.today/today.index.html",controller:"TodayController",controllerAs:"today"}}})}function e(){}angular.module("app.today",[]).config(t).controller("TodayController",e),t.$inject=["$stateProvider","$urlRouterProvider"]}(),function(){"use strict";function t(t){t.state("app.create",{url:"/alltask/create",views:{"overlay@":{templateUrl:"/html/main/main.all/create.all/create.all.html",controller:"CreatetodoController",controllerAs:"createTodo"},"main@app":{templateUrl:"html/main/main.all/all.index.html",controller:"AlltaskController",controllerAs:"todo"}}})}function e(t,e){var n=this;n.submitted=!1,n.priority=e.query(),n.createTask=function(){n.formAddTasks.$valid?(n.data={},n.data={project:n.project,label:n.label,name:n.name,dateNum:n.dateNum,headerComment:n.headerComment,comment:n.comment},t.save(n.data),$("form").find("input").val(""),$("p.msg-error").removeClass("msg-error")):($("form").find("p").addClass("msg-error"),n.submitted=!0)},n.resetVal=function(){$("form").find("input").val("")}}angular.module("app.alltodo.create",["app.alltodo"]).config(t).controller("CreatetodoController",e),t.$inject=["$stateProvider"],e.$inject=["Alltasks","Projectlabel"]}(),function(){"use strict";function t(t){t.state("app.edit",{url:"/alltask/edit",views:{"overlay@":{templateUrl:"/html/main/main.all/edit.all/edit.all.html",controller:"EdittodoController",controllerAs:"editTodo"},"main@app":{templateUrl:"html/main/main.all/all.index.html",controller:"AlltaskController",controllerAs:"todo"}}})}function e(t,e,n){var l=this,o=t.getIdData();l.idEdit=o[0],l.task=e.get({},{id:o[0]}),l.editTask=function(){l.newTask={id:o[0],project:l.task.project,label:l.task.label,name:l.task.name,dateNum:l.task.dateNum,headerComment:l.task.headerComment,comment:l.task.comment},l.newTask.dateNum=new Date(l.task.dateNum),e.update(l.newTask),n.go("app.all")},l.cancelEdit=function(){n.go("app.all")}}angular.module("app.alltodo.edit",["app.alltodo"]).config(t).controller("EdittodoController",e),t.$inject=["$stateProvider"],e.$inject=["isId","Alltasks","$state"]}();
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm1haW4uanMiLCJnbG9iYWwuanMiLCJmaWx0ZXJzLmpzIiwiY29udGVudC9jb250ZW50Q29udHJvbGxlci5qcyIsImxvZ2luL2xvZ2luQ29udHJvbGxlci5qcyIsIm1haW4vbWFpbkNvbnRyb2xsZXIuanMiLCJtZW51L21lbnVDb250cm9sbGVyLmpzIiwidXRpbGl0aWVzL3V0aWxpdGllc0NvbnRyb2xsZXIuanMiLCJtYWluL21haW4uYWxsL2FsbENvbnRyb2xsZXIuanMiLCJtYWluL21haW4udGFza1NldmVuL3NldmVuQ29udHJvbGxlci5qcyIsIm1haW4vbWFpbi50b2RheS90b2RheUNvbnRyb2xsZXIuanMiLCJtYWluL21haW4uYWxsL2NyZWF0ZS5hbGwvY3JlYXRlYWxsQ29udHJvbGxlci5qcyIsIm1haW4vbWFpbi5hbGwvZWRpdC5hbGwvZWRpdGFsbENvbnRyb2xsZXIuanMiXSwibmFtZXMiOlsiY29uZmlnIiwiJHVybFJvdXRlclByb3ZpZGVyIiwiJGh0dHBQcm92aWRlciIsIiRzdGF0ZVByb3ZpZGVyIiwib3RoZXJ3aXNlIiwic3RhdGUiLCJ1cmwiLCJ2aWV3cyIsImNvbnRlbnRAIiwidGVtcGxhdGVVcmwiLCJjb250cm9sbGVyIiwiY29udHJvbGxlckFzIiwibWVudSIsImFuZ3VsYXIiLCJtb2R1bGUiLCJjb25zdGFudCIsIiRpbmplY3QiLCJMb2dpbiIsIiRyZXNvdXJjZSIsImFwaWJhc2UiLCJnZXQiLCJtZXRob2QiLCJpc0FycmF5IiwiU3RhdHVzY29kZSIsInZhbHVlIiwiY29uc29sZSIsImxvZyIsImlzRXJyb3IiLCJUb2tlbiIsImtleSIsImxvY2FsU3RvcmFnZSIsImdldEl0ZW0iLCJzZXQiLCJ2YWwiLCJzZXRJdGVtIiwiTWVudWxpc3QiLCJzYXZlIiwicXVlcnkiLCJkZWxldGUiLCJQcm9qZWN0bGlzdCIsIlByb2plY3RsYWJlbCIsIlByb2plY3RmaWx0ZXIiLCJBbGx0YXNrcyIsImRhdGVKc29uIiwiZnJvbUpzb24iLCJkYXRlTnVtIiwiRGF0ZSIsImlkIiwidHJhbnNmb3JtUmVzcG9uc2UiLCJ1cGRhdGUiLCJyZW1vdmUiLCJpc0lkIiwiaXNJZHMiLCJhZGRJZERhdGEiLCJuZXdJRCIsInB1c2giLCJnZXRJZERhdGEiLCJmYWN0b3J5Iiwic2VydmljZSIsImZpbHRlciIsImlucHV0Iiwic3RhcnQiLCJzbGljZSIsIkNvbnRlbnRjb250cm9sbGVyIiwiJHNjb3BlIiwidG9nZ2xlRWxtIiwibGluayIsInNjb3BlIiwiZWxlbSIsImF0dHJzIiwib24iLCIkIiwidG9nZ2xlQ2xhc3MiLCJmaW5kIiwiaHRtbCIsInRleHQiLCJkaXJlY3RpdmUiLCJyZXN0cmljdCIsIkxvZ2luQ29udHJvbGxlciIsIiRzdGF0ZSIsInRoaXMiLCJzdWJtaXR0ZWQiLCJzdWJtaXRMb2dpbiIsInVzZXJsb2dpbiIsImVtYWlsIiwicGFzcyIsImxvZ2luUmVzdWx0IiwiaXNOb3RWYWxpZCIsImlzVmFsaWQiLCJnbyIsImNzcyIsImRpc3BsYXkiLCJNYWluQ29udHJvbGxlciIsIk1lbnVDb250cm9sbGVyIiwiJHN0YXRlUGFyYW1zIiwibWVudUxpc3QiLCJwcm9qZWN0TGlzdCIsInByb2plY3RMYWJlbCIsInByb2plY3RGaWx0ZXIiLCJlbG1QYW5lbCIsIiR0ZXh0VGFyZ2V0IiwiVXRpbGl0aWVzQ29udHJvbGxlciIsInRpbWUiLCJ1dGlsaXRpZXNAYXBwIiwibWFpbkBhcHAiLCJwYXJhbXMiLCJBbGx0YXNrQ29udHJvbGxlciIsIm51bWJlckN1cnJlbnQiLCJwYWdlU2l6ZSIsImFsbFRhc2tzIiwibnVtYmVyT2ZQYWdlcyIsIk1hdGgiLCJjZWlsIiwibGVuZ3RoIiwicmVtb3ZlVGFzayIsInRhc2siLCJlZGl0VGFzayIsIk5leHRDb250cm9sbGVyIiwiVG9kYXlDb250cm9sbGVyIiwib3ZlcmxheUAiLCJDcmVhdGV0b2RvQ29udHJvbGxlciIsInByaW9yaXR5IiwiY3JlYXRlVGFzayIsImZvcm1BZGRUYXNrcyIsIiR2YWxpZCIsImRhdGEiLCJwcm9qZWN0IiwibGFiZWwiLCJuYW1lIiwiaGVhZGVyQ29tbWVudCIsImNvbW1lbnQiLCJyZW1vdmVDbGFzcyIsImFkZENsYXNzIiwicmVzZXRWYWwiLCJFZGl0dG9kb0NvbnRyb2xsZXIiLCJlZGl0SWQiLCJpZEVkaXQiLCJuZXdUYXNrIiwiY2FuY2VsRWRpdCJdLCJtYXBwaW5ncyI6IkNBQUEsV0FFQSxZQXlCQSxTQUFBQSxHQUFBQyxFQUFBQyxFQUFBQyxHQUVBRixFQUFBRyxVQUFBLEtBRUFELEVBQ0FFLE1BQUEsU0FDQUMsSUFBQSxHQUNBQyxPQUNBQyxZQUNBQyxZQUFBLDhCQUNBQyxXQUFBLGtCQUNBQyxhQUFBLFlBS0FOLE1BQUEsT0FDQUMsSUFBQSxXQUNBQyxPQUNBSyxNQUNBSCxZQUFBLDRCQUNBQyxXQUFBLGlCQUNBQyxhQUFBLFlBRUFILFlBQ0FDLFlBQUEsa0NBQ0FDLFdBQUEsb0JBQ0FDLGFBQUEsY0FsREFFLFFBQUFDLE9BQUEsU0FDQUQsU0FBQUMsT0FBQSxPQUNBLFlBQ0EsWUFDQSxhQUNBLFVBQ0EsYUFDQSxXQUNBLFlBQ0EsV0FDQSxjQUNBLGNBQ0EsV0FDQSxZQUNBLGdCQUdBQyxTQUFBLFdBQUEsWUFDQUEsU0FBQSxVQUFBLHlCQUNBQSxTQUFBLGFBQUEsU0FFQWYsT0FBQUEsR0FzQ0NBLEVBQU9nQixTQUFXLHFCQUFzQixnQkFBaUIscUJDL0QxRCxXQUVBLFlBS0EsU0FBQUMsR0FBQUMsRUFBQUMsR0FDQSxNQUFBRCxHQUFBQyxFQUFBLGlCQUVBQyxLQUFBQyxPQUFBLE1BQUFDLFNBQUEsS0FLQSxRQUFBQyxLQUNBLEdBQUFDLEVBRUEsT0FEQUMsU0FBQUMsSUFBQSxHQUFBRixHQUFBLEdBQUEsSUFFQUcsUUFBQSxTQUFBSCxHQUNBLE1BQUEsSUFBQUEsR0FBQSxHQUFBLElBTUEsUUFBQUksS0FDQSxHQUFBQyxFQUNBLFFBQ0FULElBQUEsV0FFQSxNQURBUyxHQUFBQyxhQUFBQyxRQUFBLGFBR0FDLElBQUEsU0FBQUMsR0FHQSxNQUZBSCxjQUFBSSxRQUFBLFdBQUFELEdBQ0FKLEVBQUFJ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QUFXLE9BQVEsV0FBWSIsImZpbGUiOiJtYWluLmpzIiwic291cmNlc0NvbnRlbnQiOlsiKGZ1bmN0aW9uICgpIHtcblxuXHQndXNlIHN0cmljdCc7XG5cblx0dmFyIGFwcCA9IGFuZ3VsYXIubW9kdWxlKCdhcHAnLCBbXSk7XG5cdGFuZ3VsYXIubW9kdWxlKCdhcHAnLFtcblx0XHQndWkucm91dGVyJyxcblx0XHQnbmdBbmltYXRlJyxcblx0XHQnbmdSZXNvdXJjZScsXG5cdFx0J2FwcC5hcGknLFxuXHRcdCdhcHAuZ2xvYmFsJyxcblx0XHQnYXBwLm1lbnUnLFxuXHRcdCdhcHAubG9naW4nLFxuXHRcdCdhcHAubWFpbicsXG5cdFx0J2FwcC51dGlsaXR5Jyxcblx0XHQnYXBwLmFsbHRvZG8nLFxuXHRcdCdhcHAubmV4dCcsXG5cdFx0J2FwcC50b2RheScsXG5cdFx0J2FwcC5jb250ZW50J1xuXHRdKVxuXG5cdC5jb25zdGFudCgnc2l0ZW5hbWUnLCAnYXBwbG9jYWwnKVxuXHQuY29uc3RhbnQoJ2FwaWJhc2UnLCAnaHR0cDovL2xvY2FsaG9zdDozMDAwJylcblx0LmNvbnN0YW50KCdhcGl2ZXJzaW9uJywgJy92MS4wJylcblxuXHQuY29uZmlnKGNvbmZpZyk7XG5cblx0ZnVuY3Rpb24gY29uZmlnKCR1cmxSb3V0ZXJQcm92aWRlciwgJGh0dHBQcm92aWRlciwgJHN0YXRlUHJvdmlkZXIpIHtcblxuXHRcdCR1cmxSb3V0ZXJQcm92aWRlci5vdGhlcndpc2UoJy8nKTtcblxuXHRcdCRzdGF0ZVByb3ZpZGVyXG5cdFx0XHQuc3RhdGUoJ2xvZ2luJywge1xuXHRcdFx0XHR1cmw6JycsXG5cdFx0XHRcdHZpZXdzOiB7XG5cdFx0XHRcdFx0J2NvbnRlbnRAJzoge1xuXHRcdFx0XHRcdFx0dGVtcGxhdGVVcmw6ICdodG1sL2xvZ2luL2xvZ2luLmluZGV4Lmh0bWwnLFxuXHRcdFx0XHRcdFx0Y29udHJvbGxlcjogJ0xvZ2luQ29udHJvbGxlcicsXG5cdFx0XHRcdFx0XHRjb250cm9sbGVyQXM6ICdsb2dpbidcblx0XHRcdFx0XHR9XG5cdFx0XHRcdH1cblxuXHRcdFx0fSlcblx0XHRcdC5zdGF0ZSgnYXBwJywge1xuXHRcdFx0XHR1cmw6ICcvY29udGVudCcsXG5cdFx0XHRcdHZpZXdzOiB7XG5cdFx0XHRcdFx0J21lbnUnOiB7XG5cdFx0XHRcdFx0XHR0ZW1wbGF0ZVVybDogJ2h0bWwvbWVudS9tZW51LmluZGV4Lmh0bWwnLFxuXHRcdFx0XHRcdFx0Y29udHJvbGxlcjogJ01lbnVDb250cm9sbGVyJyxcblx0XHRcdFx0XHRcdGNvbnRyb2xsZXJBczogJ21lbnVEYXRhJ1xuXHRcdFx0XHRcdH0sXG5cdFx0XHRcdFx0J2NvbnRlbnRAJzoge1xuXHRcdFx0XHRcdFx0dGVtcGxhdGVVcmw6ICdodG1sL2NvbnRlbnQvY29udGVudC5pbmRleC5odG1sJyxcblx0XHRcdFx0XHRcdGNvbnRyb2xsZXI6ICdDb250ZW50Y29udHJvbGxlcicsXG5cdFx0XHRcdFx0XHRjb250cm9sbGVyQXM6ICdjb250ZW50J1xuXHRcdFx0XHRcdH1cblx0XHRcdFx0fVxuXHRcdFx0fSk7XG5cblx0XHQvL2p3dEludGVyY2VwdG9yUHJvdmlkZXIudG9rZW5HZXR0ZXIucHVzaCgnand0SW50ZXJjZXB0b3InKTtcblx0XHQvLyRodHRwUHJvdmlkZXIuaW50ZXJjZXB0b3JzLnB1c2goJ2F1dGhJbnRlcmNlcHRvcicpO1xuXG5cdH1cblxufSkoKTsiLCIoZnVuY3Rpb24gKCkge1xuXG5cdCd1c2Ugc3RyaWN0JztcblxuXHRhbmd1bGFyLm1vZHVsZSgnYXBwLmFwaScsIFtdKTtcblxuXHRhbmd1bGFyLm1vZHVsZSgnYXBwLmFwaScpLmZhY3RvcnkoJ0xvZ2luJywgTG9naW4pO1xuXHRmdW5jdGlvbiBMb2dpbigkcmVzb3VyY2UsIGFwaWJhc2UpIHtcblx0XHRyZXR1cm4gJHJlc291cmNlKGFwaWJhc2UgKyAnL3VzZXJsb2dpbicsIHt9LFxuXHRcdHtcblx0XHRcdCdnZXQnOiB7bWV0aG9kOidHRVQnLCBpc0FycmF5OiB0cnVlfVxuXHRcdH0pO1xuXHR9XG5cblx0YW5ndWxhci5tb2R1bGUoJ2FwcC5hcGknKS5mYWN0b3J5KCdTdGF0dXNjb2RlJywgU3RhdHVzY29kZSk7XG5cdGZ1bmN0aW9uIFN0YXR1c2NvZGUoKSB7XG5cdFx0dmFyIHZhbHVlO1xuXHRcdGNvbnNvbGUubG9nKCAodmFsdWUgPT0gMSkgPyB0cnVlIDogZmFsc2UgKTtcblx0XHRyZXR1cm4ge1xuXHRcdFx0aXNFcnJvcjogZnVuY3Rpb24odmFsdWUpIHsgXG5cdFx0XHRcdHJldHVybiAodmFsdWUgPT0gMSkgPyB0cnVlIDogZmFsc2U7XG5cdFx0XHR9XG5cdFx0fTtcblx0fVxuXG5cdGFuZ3VsYXIubW9kdWxlKCdhcHAuYXBpJykuZmFjdG9yeSgnVG9rZW4nLCBUb2tlbik7XG5cdGZ1bmN0aW9uIFRva2VuKCkge1xuXHRcdHZhciBrZXk7XG5cdFx0cmV0dXJuIHtcblx0XHRcdGdldDogZnVuY3Rpb24oKSB7XG5cdFx0XHRcdGtleSA9IGxvY2FsU3RvcmFnZS5nZXRJdGVtKCdpZF90b2tlbicpO1xuXHRcdFx0XHRyZXR1cm4ga2V5O1xuXHRcdFx0fSxcblx0XHRcdHNldDogZnVuY3Rpb24odmFsKSB7XG5cdFx0XHRcdGxvY2FsU3RvcmFnZS5zZXRJdGVtKCdpZF90b2tlbicsIHZhbCk7XG5cdFx0XHRcdGtleSA9IHZhbDtcblx0XHRcdFx0cmV0dXJuIGtleTtcblx0XHRcdH1cblx0XHR9O1xuXHR9XG5cblx0YW5ndWxhci5tb2R1bGUoJ2FwcC5hcGknKS5mYWN0b3J5KCdNZW51bGlzdCcsIE1lbnVsaXN0KTtcblx0ZnVuY3Rpb24gTWVudWxpc3QoJHJlc291cmNlLCBhcGliYXNlKSB7XG5cdFx0cmV0dXJuICRyZXNvdXJjZShhcGliYXNlICsgJy9tYWlubWVudScsIHt9LCBcblx0XHR7XG5cdFx0XHRcblx0XHRcdCdnZXQnOiAgICB7bWV0aG9kOidHRVQnfSxcbiAgXHRcdFx0J3NhdmUnOiAgIHttZXRob2Q6J1BPU1QnfSxcbiAgXHRcdFx0J3F1ZXJ5JzogIHttZXRob2Q6J0dFVCcsIGlzQXJyYXk6dHJ1ZX0sXG4gIFx0XHRcdCdkZWxldGUnOiB7bWV0aG9kOidERUxFVEUnfVxuXG5cdFx0fSk7XG5cdH1cblxuXHRhbmd1bGFyLm1vZHVsZSgnYXBwLmFwaScpLmZhY3RvcnkoJ1Byb2plY3RsaXN0JywgUHJvamVjdGxpc3QpO1xuXHRmdW5jdGlvbiBQcm9qZWN0bGlzdCgkcmVzb3VyY2UsIGFwaWJhc2UpIHtcblx0XHRyZXR1cm4gJHJlc291cmNlKGFwaWJhc2UgKyAnL3Byb2plY3QnLCB7fSwgXG5cdFx0e1xuXHRcdFx0XG5cdFx0XHQnZ2V0JzogICAge21ldGhvZDonR0VUJ30sXG4gIFx0XHRcdCdzYXZlJzogICB7bWV0aG9kOidQT1NUJ30sXG4gIFx0XHRcdCdxdWVyeSc6ICB7bWV0aG9kOidHRVQnLCBpc0FycmF5OnRydWV9LFxuICBcdFx0XHQnZGVsZXRlJzoge21ldGhvZDonREVMRVRFJ31cblxuXHRcdH0pO1xuXHR9XG5cblx0YW5ndWxhci5tb2R1bGUoJ2FwcC5hcGknKS5mYWN0b3J5KCdQcm9qZWN0bGFiZWwnLCBQcm9qZWN0bGFiZWwpO1xuXHRmdW5jdGlvbiBQcm9qZWN0bGFiZWwoJHJlc291cmNlLCBhcGliYXNlKSB7XG5cdFx0cmV0dXJuICRyZXNvdXJjZShhcGliYXNlICsgJy9sYWJlbHMnLCB7fSwgXG5cdFx0e1xuXHRcdFx0XG5cdFx0XHQnZ2V0JzogICAge21ldGhvZDonR0VUJ30sXG4gIFx0XHRcdCdzYXZlJzogICB7bWV0aG9kOidQT1NUJ30sXG4gIFx0XHRcdCdxdWVyeSc6ICB7bWV0aG9kOidHRVQnLCBpc0FycmF5OnRydWV9LFxuICBcdFx0XHQnZGVsZXRlJzoge21ldGhvZDonREVMRVRFJ31cblxuXHRcdH0pO1xuXHR9XG5cblx0YW5ndWxhci5tb2R1bGUoJ2FwcC5hcGknKS5mYWN0b3J5KCdQcm9qZWN0ZmlsdGVyJywgUHJvamVjdGZpbHRlcik7XG5cdGZ1bmN0aW9uIFByb2plY3RmaWx0ZXIoJHJlc291cmNlLCBhcGliYXNlKSB7XG5cdFx0cmV0dXJuICRyZXNvdXJjZShhcGliYXNlICsgJy9maWx0ZXJzJywge30sIFxuXHRcdHtcblx0XHRcdFxuXHRcdFx0J2dldCc6ICAgIHttZXRob2Q6J0dFVCd9LFxuICBcdFx0XHQnc2F2ZSc6ICAge21ldGhvZDonUE9TVCd9LFxuICBcdFx0XHQncXVlcnknOiAge21ldGhvZDonR0VUJywgaXNBcnJheTp0cnVlfSxcbiAgXHRcdFx0J2RlbGV0ZSc6IHttZXRob2Q6J0RFTEVURSd9XG5cblx0XHR9KTtcblx0fVxuXG5cdGFuZ3VsYXIubW9kdWxlKCdhcHAuYXBpJykuZmFjdG9yeSgnQWxsdGFza3MnLCBBbGx0YXNrcyk7XG5cdGZ1bmN0aW9uIEFsbHRhc2tzKCRyZXNvdXJjZSwgYXBpYmFzZSkge1xuXG5cdFx0dmFyIGRhdGVKc29uID0gZnVuY3Rpb24gKCBBbGx0YXNrcyApIHtcblx0XHRcdEFsbHRhc2tzID0gYW5ndWxhci5mcm9tSnNvbihBbGx0YXNrcyk7XG5cdFx0XHRBbGx0YXNrcy5kYXRlTnVtID0gbmV3IERhdGUgKEFsbHRhc2tzLmRhdGVOdW0pO1xuXHRcdFx0cmV0dXJuIEFsbHRhc2tzO1x0XG5cdFx0fTtcblxuXHRcdHJldHVybiAkcmVzb3VyY2UoYXBpYmFzZSArICcvdGFzay86aWQnLCB7aWQ6J0BpZCd9LCBcblx0XHR7XG5cdFx0XHRcblx0XHRcdCdnZXQnOiAgICB7bWV0aG9kOidHRVQnLCB0cmFuc2Zvcm1SZXNwb25zZTogZGF0ZUpzb24gfSxcbiAgXHRcdFx0J3NhdmUnOiAgIHttZXRob2Q6J1BPU1QnfSxcbiAgXHRcdFx0J3VwZGF0ZSc6IHttZXRob2Q6J1BVVCcgfSxcbiAgXHRcdFx0J3F1ZXJ5JzogIHttZXRob2Q6J0dFVCcsIGlzQXJyYXk6dHJ1ZX0sXG4gIFx0XHRcdCdyZW1vdmUnOiB7bWV0aG9kOidERUxFVEUnfSxcbiAgXHRcdFx0J2RlbGV0ZSc6IHttZXRob2Q6J0RFTEVURSd9XG5cblx0XHR9KTtcblx0fVxuXG5cdGFuZ3VsYXIubW9kdWxlKCdhcHAuYXBpJykuc2VydmljZSgnaXNJZCcsIGlzSWQpO1xuXHRmdW5jdGlvbiBpc0lkICgpIHtcblxuXHRcdHZhciBpc0lkcyA9IFtdO1xuXG5cdFx0dmFyIGFkZElkRGF0YSA9IGZ1bmN0aW9uIChuZXdJRCkge1xuXHRcdFx0aXNJZHMucHVzaChuZXdJRCk7XG5cdFx0fTtcblxuXHRcdHZhciBnZXRJZERhdGEgPSBmdW5jdGlvbiAoKSB7XG5cdFx0XHRyZXR1cm4gaXNJZHM7XG5cdFx0fTtcblxuXHRcdHJldHVybiB7XG5cdFx0XHRhZGRJZERhdGE6IGFkZElkRGF0YSxcblx0XHRcdGdldElkRGF0YTogZ2V0SWREYXRhXG5cblx0XHR9O1xuXG5cdH1cblxufSkoKTtcbiIsIihmdW5jdGlvbigpIHtcblxuXHQndXNlIHN0cmljdCc7XG5cblx0YW5ndWxhci5tb2R1bGUoJ2FwcC5nbG9iYWwnLFtdKVxuXG5cdFx0LmZpbHRlcigncGFnaW5hdGlvbicsIGZ1bmN0aW9uICgpIHtcblxuXHRcdFx0cmV0dXJuIGZ1bmN0aW9uICggaW5wdXQsIHN0YXJ0ICkge1xuXG5cdFx0XHRcdHN0YXJ0ID0gK3N0YXJ0O1xuXHRcdFx0XHRyZXR1cm4gaW5wdXQuc2xpY2Uoc3RhcnQpO1xuXG5cdFx0XHR9O1xuXHRcdH0pO1xuXG59KSgpOyIsIihmdW5jdGlvbiAoKSB7XG5cblx0J3VzZSBzdHJpY3QnO1xuXG5cdGFuZ3VsYXIubW9kdWxlKCdhcHAuY29udGVudCcsIFtdKVxuXHQuY29udHJvbGxlcignQ29udGVudGNvbnRyb2xsZXInLCBDb250ZW50Y29udHJvbGxlcilcblx0LmRpcmVjdGl2ZSgndG9nZ2xlRWxtJywgdG9nZ2xlRWxtKTtcblxuXHRmdW5jdGlvbiBDb250ZW50Y29udHJvbGxlciAoICRzY29wZSApIHt9XG5cblx0ZnVuY3Rpb24gdG9nZ2xlRWxtICgpIHtcblxuXHRcdHZhciBkaXJlY3RpdmUgPSB7XG5cdFx0XHRsaW5rOiBsaW5rLFxuXHRcdFx0cmVzdHJpY3Q6ICdBJ1xuXHRcdH1cblxuXHRcdHJldHVybiBkaXJlY3RpdmU7XG5cblx0XHRmdW5jdGlvbiBsaW5rKHNjb3BlLCBlbGVtLCBhdHRycykge1xuXG5cdFx0XHRlbGVtLm9uKFwiY2xpY2tcIiwgZnVuY3Rpb24oKSB7XG5cblx0ICAgICAgICAgICAgJCgnLndyYXBwZXInKS50b2dnbGVDbGFzcygncGFuZWxBbmltYXRlcycpO1xuXHQgICAgICAgICAgICBlbGVtLmZpbmQoJ3NwYW4nKS5odG1sKCQoJy5jbG9zZUJ0biBzcGFuJykudGV4dCgpID09ICdPcGVuJyA/ICdDbG9zZScgOiAnT3BlbicpO1xuXG5cdCAgICAgICAgfSk7XG5cblx0XHR9XG5cblx0fVxuXG59KSgpOyIsIihmdW5jdGlvbiAoKSB7XG5cblx0J3VzZSBzdHJpY3QnO1xuXG5cdGFuZ3VsYXIubW9kdWxlKCdhcHAubG9naW4nLFtdKVxuXHQuY29udHJvbGxlcignTG9naW5Db250cm9sbGVyJywgTG9naW5Db250cm9sbGVyKTtcblxuXHRmdW5jdGlvbiBMb2dpbkNvbnRyb2xsZXIgKCAkc3RhdGUsIExvZ2luICkge1xuXG5cdFx0dmFyIExvZ2luQ29udHJvbGxlciA9IHRoaXM7XG5cdFx0TG9naW5Db250cm9sbGVyLnN1Ym1pdHRlZCA9IGZhbHNlO1xuXG5cdFx0TG9naW5Db250cm9sbGVyLnN1Ym1pdExvZ2luID0gZnVuY3Rpb24oKSB7XG5cblx0XHRcdExvZ2luQ29udHJvbGxlci51c2VybG9naW4gPSB7fTtcblx0XHRcdExvZ2luQ29udHJvbGxlci51c2VybG9naW4gPSB7XG5cdFx0XHRcdGVtYWlsOiBMb2dpbkNvbnRyb2xsZXIuZW1haWwsXG5cdFx0XHRcdHBhc3M6IExvZ2luQ29udHJvbGxlci5wYXNzXG5cdFx0XHR9O1xuXHRcdFx0XG5cdFx0XHR2YXIgbG9naW5SZXN1bHQgPSBbXTtcbiBcdFx0XHRsb2dpblJlc3VsdCA9IExvZ2luLmdldChMb2dpbkNvbnRyb2xsZXIudXNlcmxvZ2luLCBmdW5jdGlvbigpe1xuIFx0XHRcdFx0KHR5cGVvZihMb2dpbkNvbnRyb2xsZXIudXNlcmxvZ2luLmVtYWlsKSA9PSBcInVuZGVmaW5lZFwiKSA/IGlzTm90VmFsaWQoKSA6IGlzVmFsaWQoKTtcblx0XHRcdH0pO1xuXHRcdFx0XHRcblx0XHRcdHZhciBpc1ZhbGlkID0gZnVuY3Rpb24oKSB7XG5cdFx0XHRcdCRzdGF0ZS5nbygnYXBwJyk7XG5cdFx0XHR9O1xuXG5cdFx0XHR2YXIgaXNOb3RWYWxpZCA9IGZ1bmN0aW9uKCkge1xuXHRcdFx0XHQkKCcuZXJyb3JMb2dpbicpLmNzcyh7J2Rpc3BsYXknOidibG9jayd9KTtcblx0XHRcdH07XG5cblxuXHRcdFx0JCgnaW5wdXQnKS52YWwoJycpO1xuXG5cdFx0fTtcblx0XHRcblxuXHR9XG5cbn0pKCk7IiwiKGZ1bmN0aW9uICgpIHtcblxuXHQndXNlIHN0cmljdCc7XG5cblx0YW5ndWxhci5tb2R1bGUoJ2FwcC5tYWluJyxbXSlcblx0Ly8uY29uZmlnKGNvbmZpZylcblx0LmNvbnRyb2xsZXIoJ01haW5Db250cm9sbGVyJywgTWFpbkNvbnRyb2xsZXIpO1xuXG4vKlxuXHRmdW5jdGlvbiBjb25maWcgKCAkc3RhdGVQcm92aWRlciwgJHVybFJvdXRlclByb3ZpZGVyICkge1xuXG5cdFx0JHN0YXRlUHJvdmlkZXJcblx0XHRcdC5zdGF0ZSgnYXBwLmFsbCcsIHtcblx0XHRcdFx0dXJsOicvYWxsVGFza3MnLFxuXHRcdFx0XHRhYnN0cmFjdDogZmFsc2UsXG5cdFx0XHRcdHZpZXdzOiB7XG5cdFx0XHRcdFx0J3V0aWxpdGllc0BhcHAnOiB7XG5cdFx0XHRcdFx0XHR0ZW1wbGF0ZVVybDogJ2h0bWwvdXRpbGl0aWVzL3V0aWxpdGllcy5pbmRleC5odG1sJyxcblx0XHRcdFx0XHRcdGNvbnRyb2xsZXI6ICdVdGlsaXRpZXNDb250cm9sbGVyJyxcblx0XHRcdFx0XHRcdGNvbnRyb2xsZXJBczogJ1V0aWxpdGllcydcblx0XHRcdFx0XHR9LFxuXHRcdFx0XHRcdCdtYWluQGFwcCc6IHtcblx0XHRcdFx0XHRcdHRlbXBsYXRlVXJsOiAnaHRtbC9tYWluL21haW4uaW5kZXguaHRtbCcsXG5cdFx0XHRcdFx0XHRjb250cm9sbGVyOiAnTWFpbkNvbnRyb2xsZXInXG5cdFx0XHRcdFx0fVxuXG5cdFx0XHRcdH1cblx0XHRcdH0pO1xuXHR9XG4qL1xuXHRmdW5jdGlvbiBNYWluQ29udHJvbGxlcigpIHt9XG5cbn0pKCk7IiwiKGZ1bmN0aW9uICgpIHtcblxuXHQndXNlIHN0cmljdCc7XG5cblx0YW5ndWxhci5tb2R1bGUoJ2FwcC5tZW51JyxbXSlcblx0LmNvbnRyb2xsZXIoJ01lbnVDb250cm9sbGVyJywgTWVudUNvbnRyb2xsZXIpXG5cdC5kaXJlY3RpdmUoJ2VsbVBhbmVsJywgZWxtUGFuZWwpO1xuXG5cdGZ1bmN0aW9uIE1lbnVDb250cm9sbGVyKCBNZW51bGlzdCwgUHJvamVjdGxpc3QsIFByb2plY3RsYWJlbCwgUHJvamVjdGZpbHRlciwgJHN0YXRlUGFyYW1zICkge1xuXG5cdFx0dmFyIE1lbnVDb250cm9sbGVyID0gdGhpcztcblxuXHRcdE1lbnVDb250cm9sbGVyLm1lbnVMaXN0ID0gTWVudWxpc3QucXVlcnkoKTtcblx0XHRNZW51Q29udHJvbGxlci5wcm9qZWN0TGlzdCA9IFByb2plY3RsaXN0LnF1ZXJ5KCk7XG5cdFx0TWVudUNvbnRyb2xsZXIucHJvamVjdExhYmVsID0gUHJvamVjdGxhYmVsLnF1ZXJ5KCk7XG5cdFx0TWVudUNvbnRyb2xsZXIucHJvamVjdEZpbHRlciA9IFByb2plY3RmaWx0ZXIucXVlcnkoKTtcblxuXHR9XG5cblx0ZnVuY3Rpb24gZWxtUGFuZWwoKSB7XG5cblx0XHR2YXIgZGlyZWN0aXZlID0ge1xuXHRcdFx0bGluazogbGluayxcblx0XHRcdHJlc3RyaWN0OiAnQSdcblx0XHR9O1xuXG5cdFx0cmV0dXJuIGRpcmVjdGl2ZTtcblxuXHRcdGZ1bmN0aW9uIGxpbmsgIChzY29wZSwgZWxlbSwgYXR0cnMpIHtcblxuXHRcdFx0ZWxlbS5vbignY2xpY2snLCBmdW5jdGlvbigpe1xuXHRcdFx0XHR2YXIgJHRleHRUYXJnZXQgPSAkKCcuY29udGVudCAuY2xvc2VCdG4nKS5maW5kKCdzcGFuJyk7XG5cdFx0XHRcdCQoJy53cmFwcGVyJykudG9nZ2xlQ2xhc3MoJ3BhbmVsQW5pbWF0ZXMnKTtcblx0XHRcdFx0JHRleHRUYXJnZXQuaHRtbCggJHRleHRUYXJnZXQudGV4dCgpID09ICdDbG9zZScgPyAnT3BlbicgOiAnQ2xvc2UnKTtcblx0XHRcdH0pO1xuXHRcdH1cblx0fVxuXG59KSgpOyIsIihmdW5jdGlvbigpe1xuXG5cdCd1c2Ugc3RyaWN0JztcblxuXHRhbmd1bGFyLm1vZHVsZSgnYXBwLnV0aWxpdHknLFtdKVxuXHQuY29udHJvbGxlcignVXRpbGl0aWVzQ29udHJvbGxlcicsIFV0aWxpdGllc0NvbnRyb2xsZXIpO1xuXG5cdGZ1bmN0aW9uIFV0aWxpdGllc0NvbnRyb2xsZXIoKSB7XG5cdFx0XG5cdFx0dmFyIFV0aWxpdGllc0NvbnRyb2xsZXIgPSB0aGlzO1xuXHRcdFV0aWxpdGllc0NvbnRyb2xsZXIudGltZSA9IG5ldyBEYXRlKCk7XG5cdFx0XG5cdH0gXG5cbn0pKCk7IiwiKGZ1bmN0aW9uICgpIHtcblxuXHQndXNlIHN0cmljdCc7XG5cblx0YW5ndWxhci5tb2R1bGUoJ2FwcC5hbGx0b2RvJywgW1xuXHRcdCdhcHAuYWxsdG9kby5jcmVhdGUnLFxuXHRcdCdhcHAuYWxsdG9kby5lZGl0J1xuXHRdKVxuXHQuY29uZmlnKGNvbmZpZylcblx0LmNvbnRyb2xsZXIoJ0FsbHRhc2tDb250cm9sbGVyJywgQWxsdGFza0NvbnRyb2xsZXIpO1xuXG5cdGZ1bmN0aW9uIGNvbmZpZyAoICRzdGF0ZVByb3ZpZGVyICkge1xuXG5cdFx0JHN0YXRlUHJvdmlkZXJcblx0XHRcdC5zdGF0ZSgnYXBwLmFsbCcsIHtcblx0XHRcdFx0dXJsOicvYWxsdGFzay86aWQnLFxuXHRcdFx0XHR2aWV3czoge1xuXHRcdFx0XHRcdCd1dGlsaXRpZXNAYXBwJzoge1xuXHRcdFx0XHRcdFx0dGVtcGxhdGVVcmw6ICdodG1sL3V0aWxpdGllcy91dGlsaXRpZXMuaW5kZXguaHRtbCcsXG5cdFx0XHRcdFx0XHRjb250cm9sbGVyOiAnVXRpbGl0aWVzQ29udHJvbGxlcicsXG5cdFx0XHRcdFx0XHRjb250cm9sbGVyQXM6ICd1dGlsaXRpZXMnXG5cdFx0XHRcdFx0fSxcblx0XHRcdFx0XHQnbWFpbkBhcHAnOiB7XG5cdFx0XHRcdFx0XHRwYXJhbXM6WydpZCddLFxuXHRcdFx0XHRcdFx0dGVtcGxhdGVVcmw6ICdodG1sL21haW4vbWFpbi5hbGwvYWxsLmluZGV4Lmh0bWwnLFxuXHRcdFx0XHRcdFx0Y29udHJvbGxlcjogJ0FsbHRhc2tDb250cm9sbGVyJyxcblx0XHRcdFx0XHRcdGNvbnRyb2xsZXJBczogJ3RvZG8nXG5cdFx0XHRcdFx0fVxuXHRcdFx0XHR9XG5cdFx0XHR9KTtcblx0fVxuXG5cdGZ1bmN0aW9uIEFsbHRhc2tDb250cm9sbGVyICggQWxsdGFza3MsICRzdGF0ZSwgaXNJZCApIHtcblxuXHRcdHZhciBBbGx0YXNrQ29udHJvbGxlciA9IHRoaXM7XG5cdFx0XHRBbGx0YXNrQ29udHJvbGxlci5udW1iZXJDdXJyZW50ID0gMDtcblx0XHRcblx0XHRBbGx0YXNrQ29udHJvbGxlci5wYWdlU2l6ZSA9IDM7XG5cdFx0QWxsdGFza0NvbnRyb2xsZXIuYWxsVGFza3MgPSBBbGx0YXNrcy5xdWVyeSgpO1xuXG5cdFx0QWxsdGFza0NvbnRyb2xsZXIubnVtYmVyT2ZQYWdlcyA9ICBmdW5jdGlvbiAoKSB7XG5cdFx0XHRyZXR1cm4gTWF0aC5jZWlsKEFsbHRhc2tDb250cm9sbGVyLmFsbFRhc2tzLmxlbmd0aCAvIEFsbHRhc2tDb250cm9sbGVyLnBhZ2VTaXplKTtcblx0XHR9O1x0XHRcblx0XHRBbGx0YXNrQ29udHJvbGxlci5yZW1vdmVUYXNrID0gZnVuY3Rpb24gKHRhc2spIHtcblx0XHRcdEFsbHRhc2tzLmRlbGV0ZSh7fSwgeydpZCc6IHRhc2suaWR9LCBmdW5jdGlvbiAoKSB7XG5cdFx0XHQgICAgQWxsdGFza0NvbnRyb2xsZXIuYWxsVGFza3MgPSBBbGx0YXNrcy5xdWVyeSgpO1xuXHRcdFx0fSk7XG5cdFx0fTtcblx0XHRBbGx0YXNrQ29udHJvbGxlci5lZGl0VGFzayA9IGZ1bmN0aW9uICh0YXNrKSB7XG5cdFx0XHRpc0lkLmFkZElkRGF0YSh0YXNrLmlkKTtcblx0XHRcdCRzdGF0ZS5nbygnYXBwLmVkaXQnKTtcblx0XHR9O1xuXHR9XG5cbn0pKCk7IiwiKGZ1bmN0aW9uICgpIHtcblxuXHQndXNlIHN0cmljdCc7XG5cblx0YW5ndWxhci5tb2R1bGUoJ2FwcC5uZXh0JyxbXSlcblx0LmNvbmZpZyhjb25maWcpXG5cdC5jb250cm9sbGVyKCdOZXh0Q29udHJvbGxlcicsIE5leHRDb250cm9sbGVyKTtcblxuXHRmdW5jdGlvbiBjb25maWcgKCAkc3RhdGVQcm92aWRlciwgJHVybFJvdXRlclByb3ZpZGVyICkge1xuXG5cdFx0JHN0YXRlUHJvdmlkZXJcblx0XHRcdC5zdGF0ZSgnYXBwLm5leHQnLCB7XG5cdFx0XHRcdHVybDonL25leHQvOmlkJyxcblx0XHRcdFx0dmlld3M6IHtcblx0XHRcdFx0XHQndXRpbGl0aWVzQGFwcCc6IHtcblx0XHRcdFx0XHRcdHRlbXBsYXRlVXJsOiAnaHRtbC91dGlsaXRpZXMvdXRpbGl0aWVzLmluZGV4Lmh0bWwnLFxuXHRcdFx0XHRcdFx0Y29udHJvbGxlcjogJ1V0aWxpdGllc0NvbnRyb2xsZXInLFxuXHRcdFx0XHRcdFx0Y29udHJvbGxlckFzOiAndXRpbGl0aWVzJ1xuXHRcdFx0XHRcdH0sXG5cdFx0XHRcdFx0J21haW5AYXBwJzoge1xuXHRcdFx0XHRcdFx0dGVtcGxhdGVVcmw6ICdodG1sL21haW4vbWFpbi50YXNrU2V2ZW4vc2V2ZW4uaW5kZXguaHRtbCcsXG5cdFx0XHRcdFx0XHRjb250cm9sbGVyOiAnTmV4dENvbnRyb2xsZXInLFxuXHRcdFx0XHRcdFx0Y29udHJvbGxlckFzOiAnbmV4dCdcblx0XHRcdFx0XHR9XG5cdFx0XHRcdH1cblx0XHRcdH0pO1xuXHR9XG5cblx0ZnVuY3Rpb24gTmV4dENvbnRyb2xsZXIgKCkge31cblxufSkoKTsiLCIoZnVuY3Rpb24gKCkge1xuXG5cdCd1c2Ugc3RyaWN0JztcblxuXHRhbmd1bGFyLm1vZHVsZSgnYXBwLnRvZGF5JyxbXSlcblx0LmNvbmZpZyhjb25maWcpXG5cdC5jb250cm9sbGVyKCdUb2RheUNvbnRyb2xsZXInLCBUb2RheUNvbnRyb2xsZXIpO1xuXG5cdGZ1bmN0aW9uIGNvbmZpZyAoICRzdGF0ZVByb3ZpZGVyLCAkdXJsUm91dGVyUHJvdmlkZXIgKSB7XG5cblx0XHQkc3RhdGVQcm92aWRlclxuXHRcdFx0LnN0YXRlKCdhcHAudG9kYXknLCB7XG5cdFx0XHRcdHVybDonL3RvZGF5Jyxcblx0XHRcdFx0dmlld3M6IHtcblx0XHRcdFx0XHQndXRpbGl0aWVzQGFwcCc6IHtcblx0XHRcdFx0XHRcdHRlbXBsYXRlVXJsOiAnaHRtbC91dGlsaXRpZXMvdXRpbGl0aWVzLmluZGV4Lmh0bWwnLFxuXHRcdFx0XHRcdFx0Y29udHJvbGxlcjogJ1V0aWxpdGllc0NvbnRyb2xsZXInLFxuXHRcdFx0XHRcdFx0Y29udHJvbGxlckFzOiAndXRpbGl0aWVzJ1xuXHRcdFx0XHRcdH0sXG5cdFx0XHRcdFx0J21haW5AYXBwJzoge1xuXHRcdFx0XHRcdFx0dGVtcGxhdGVVcmw6ICdodG1sL21haW4vbWFpbi50b2RheS90b2RheS5pbmRleC5odG1sJyxcblx0XHRcdFx0XHRcdGNvbnRyb2xsZXI6ICdUb2RheUNvbnRyb2xsZXInLFxuXHRcdFx0XHRcdFx0Y29udHJvbGxlckFzOiAndG9kYXknXG5cdFx0XHRcdFx0fVxuXHRcdFx0XHR9XG5cdFx0XHR9KTtcblx0fVxuXG5cdGZ1bmN0aW9uIFRvZGF5Q29udHJvbGxlcigpIHt9XG5cbn0pKCk7IiwiKGZ1bmN0aW9uICgpIHtcblxuXHQndXNlIHN0cmljdCc7XG5cblx0YW5ndWxhci5tb2R1bGUoJ2FwcC5hbGx0b2RvLmNyZWF0ZScsW1xuXHRcdCdhcHAuYWxsdG9kbydcblx0XSlcblx0LmNvbmZpZyhjb25maWcpXG5cdC5jb250cm9sbGVyKCdDcmVhdGV0b2RvQ29udHJvbGxlcicsIENyZWF0ZXRvZG9Db250cm9sbGVyKTtcblxuXHRmdW5jdGlvbiBjb25maWcgKCAkc3RhdGVQcm92aWRlciApIHtcblxuXHRcdCRzdGF0ZVByb3ZpZGVyXG5cdFx0XHQuc3RhdGUoJ2FwcC5jcmVhdGUnLCB7XG5cblx0XHRcdFx0dXJsOiAnL2FsbHRhc2svY3JlYXRlJyxcblx0XHRcdFx0dmlld3M6IHtcblx0XHRcdFx0XHQnb3ZlcmxheUAnOiB7XG5cdFx0XHRcdFx0XHR0ZW1wbGF0ZVVybDogJy9odG1sL21haW4vbWFpbi5hbGwvY3JlYXRlLmFsbC9jcmVhdGUuYWxsLmh0bWwnLFxuXHRcdFx0XHRcdFx0Y29udHJvbGxlcjogJ0NyZWF0ZXRvZG9Db250cm9sbGVyJyxcblx0XHRcdFx0XHRcdGNvbnRyb2xsZXJBczogJ2NyZWF0ZVRvZG8nXG5cdFx0XHRcdFx0fSxcblx0XHRcdFx0XHQnbWFpbkBhcHAnOiB7XG5cdFx0XHRcdFx0XHR0ZW1wbGF0ZVVybDogJ2h0bWwvbWFpbi9tYWluLmFsbC9hbGwuaW5kZXguaHRtbCcsXG5cdFx0XHRcdFx0XHRjb250cm9sbGVyOiAnQWxsdGFza0NvbnRyb2xsZXInLFxuXHRcdFx0XHRcdFx0Y29udHJvbGxlckFzOiAndG9kbydcblx0XHRcdFx0XHR9XG5cdFx0XHRcdH1cblxuXHRcdFx0fSk7XG5cdH1cblxuXHRmdW5jdGlvbiBDcmVhdGV0b2RvQ29udHJvbGxlciAoIEFsbHRhc2tzLCBQcm9qZWN0bGFiZWwgKSB7XG5cblx0XHR2YXIgQ3JlYXRldG9kb0NvbnRyb2xsZXIgPSB0aGlzO1xuXG5cdFx0Q3JlYXRldG9kb0NvbnRyb2xsZXIuc3VibWl0dGVkID0gZmFsc2U7XG5cblx0XHRDcmVhdGV0b2RvQ29udHJvbGxlci5wcmlvcml0eSA9IFByb2plY3RsYWJlbC5xdWVyeSgpO1xuXG5cdFx0Q3JlYXRldG9kb0NvbnRyb2xsZXIuY3JlYXRlVGFzayA9IGZ1bmN0aW9uICgpIHtcblxuXHRcdFx0aWYgKENyZWF0ZXRvZG9Db250cm9sbGVyLmZvcm1BZGRUYXNrcy4kdmFsaWQpIHtcblxuXHRcdFx0XHRDcmVhdGV0b2RvQ29udHJvbGxlci5kYXRhID0ge307XG5cblx0XHRcdFx0Q3JlYXRldG9kb0NvbnRyb2xsZXIuZGF0YSA9IHtcblxuXHRcdFx0XHRcdHByb2plY3Q6IENyZWF0ZXRvZG9Db250cm9sbGVyLnByb2plY3QsXG5cdFx0XHRcdFx0bGFiZWw6IENyZWF0ZXRvZG9Db250cm9sbGVyLmxhYmVsLFxuXHRcdFx0XHRcdG5hbWU6IENyZWF0ZXRvZG9Db250cm9sbGVyLm5hbWUsXG5cdFx0XHRcdFx0ZGF0ZU51bTogQ3JlYXRldG9kb0NvbnRyb2xsZXIuZGF0ZU51bSxcblx0XHRcdFx0XHRoZWFkZXJDb21tZW50OiBDcmVhdGV0b2RvQ29udHJvbGxlci5oZWFkZXJDb21tZW50LFxuXHRcdFx0XHRcdGNvbW1lbnQ6IENyZWF0ZXRvZG9Db250cm9sbGVyLmNvbW1lbnRcblx0XHRcdFx0XHRcblx0XHRcdFx0fTtcblxuXHRcdFx0XHRBbGx0YXNrcy5zYXZlKENyZWF0ZXRvZG9Db250cm9sbGVyLmRhdGEpO1xuXHRcdFx0XHQkKCdmb3JtJykuZmluZCgnaW5wdXQnKS52YWwoJycpO1xuXHRcdFx0XHQkKCdwLm1zZy1lcnJvcicpLnJlbW92ZUNsYXNzKCdtc2ctZXJyb3InKTtcblxuXHRcdFx0fSBlbHNlIHtcblxuXHRcdFx0XHQkKCdmb3JtJykuZmluZCgncCcpLmFkZENsYXNzKCdtc2ctZXJyb3InKTtcblx0XHRcdFx0Q3JlYXRldG9kb0NvbnRyb2xsZXIuc3VibWl0dGVkID0gdHJ1ZTtcblxuXHRcdFx0fVxuXG5cblxuXHRcdH07XG5cdFx0XG5cdFx0Q3JlYXRldG9kb0NvbnRyb2xsZXIucmVzZXRWYWwgPSBmdW5jdGlvbigpIHtcblx0XHRcdCQoJ2Zvcm0nKS5maW5kKCdpbnB1dCcpLnZhbCgnJyk7XG5cdFx0fTtcblxuXHR9XG5cbn0pKCk7IiwiKGZ1bmN0aW9uICgpIHtcblx0XG5cdCd1c2Ugc3RyaWN0JztcblxuXHRhbmd1bGFyLm1vZHVsZSgnYXBwLmFsbHRvZG8uZWRpdCcsW1xuXHRcdCdhcHAuYWxsdG9kbydcblx0XSlcblx0LmNvbmZpZyhjb25maWcpXG5cdC5jb250cm9sbGVyKCdFZGl0dG9kb0NvbnRyb2xsZXInLCBFZGl0dG9kb0NvbnRyb2xsZXIgKTtcblxuXHRmdW5jdGlvbiBjb25maWcgKCAkc3RhdGVQcm92aWRlciApIHtcblxuXHRcdCRzdGF0ZVByb3ZpZGVyXG5cdFx0XHQuc3RhdGUoJ2FwcC5lZGl0Jywge1xuXG5cdFx0XHRcdHVybDogJy9hbGx0YXNrL2VkaXQnLFxuXHRcdFx0XHR2aWV3czoge1xuXG5cdFx0XHRcdFx0J292ZXJsYXlAJzoge1xuXHRcdFx0XHRcdFx0dGVtcGxhdGVVcmw6ICcvaHRtbC9tYWluL21haW4uYWxsL2VkaXQuYWxsL2VkaXQuYWxsLmh0bWwnLFxuXHRcdFx0XHRcdFx0Y29udHJvbGxlcjogJ0VkaXR0b2RvQ29udHJvbGxlcicsXG5cdFx0XHRcdFx0XHRjb250cm9sbGVyQXM6ICdlZGl0VG9kbydcblx0XHRcdFx0XHRcdFxuXHRcdFx0XHRcdH0sXG5cdFx0XHRcdFx0J21haW5AYXBwJzoge1xuXHRcdFx0XHRcdFx0dGVtcGxhdGVVcmw6ICdodG1sL21haW4vbWFpbi5hbGwvYWxsLmluZGV4Lmh0bWwnLFxuXHRcdFx0XHRcdFx0Y29udHJvbGxlcjogJ0FsbHRhc2tDb250cm9sbGVyJyxcblx0XHRcdFx0XHRcdGNvbnRyb2xsZXJBczogJ3RvZG8nXG5cdFx0XHRcdFx0fVxuXG5cdFx0XHRcdH1cblx0XHRcdH0pO1xuXHR9XG5cblx0ZnVuY3Rpb24gRWRpdHRvZG9Db250cm9sbGVyICggaXNJZCwgQWxsdGFza3MsICRzdGF0ZSApIHtcblxuXHRcdHZhciBFZGl0dG9kb0NvbnRyb2xsZXIgPSB0aGlzO1xuXHRcdHZhciBlZGl0SWQgPSBpc0lkLmdldElkRGF0YSgpO1xuXG5cdFx0RWRpdHRvZG9Db250cm9sbGVyLmlkRWRpdCA9IGVkaXRJZFswXTtcblx0XHRFZGl0dG9kb0NvbnRyb2xsZXIudGFzayA9IEFsbHRhc2tzLmdldCh7fSx7J2lkJzogZWRpdElkWzBdfSk7XG5cblx0XHRFZGl0dG9kb0NvbnRyb2xsZXIuZWRpdFRhc2sgPSBmdW5jdGlvbigpIHtcblx0XHRcdFxuXHRcdFx0RWRpdHRvZG9Db250cm9sbGVyLm5ld1Rhc2sgPSB7XG5cblx0XHRcdFx0aWQ6IGVkaXRJZFswXSxcblx0XHRcdFx0cHJvamVjdDogRWRpdHRvZG9Db250cm9sbGVyLnRhc2sucHJvamVjdCxcblx0XHRcdFx0bGFiZWw6IEVkaXR0b2RvQ29udHJvbGxlci50YXNrLmxhYmVsLFxuXHRcdFx0XHRuYW1lOiBFZGl0dG9kb0NvbnRyb2xsZXIudGFzay5uYW1lLFxuXHRcdFx0XHRkYXRlTnVtOiBFZGl0dG9kb0NvbnRyb2xsZXIudGFzay5kYXRlTnVtLFxuXHRcdFx0XHRoZWFkZXJDb21tZW50OiBFZGl0dG9kb0NvbnRyb2xsZXIudGFzay5oZWFkZXJDb21tZW50LFxuXHRcdFx0XHRjb21tZW50OiBFZGl0dG9kb0NvbnRyb2xsZXIudGFzay5jb21tZW50XG5cdFx0XHR9O1xuXG5cdFx0XHRFZGl0dG9kb0NvbnRyb2xsZXIubmV3VGFzay5kYXRlTnVtID0gbmV3IERhdGUgKEVkaXR0b2RvQ29udHJvbGxlci50YXNrLmRhdGVOdW0pO1xuXHRcdFx0QWxsdGFza3MudXBkYXRlKEVkaXR0b2RvQ29udHJvbGxlci5uZXdUYXNrKTtcblx0XHRcdCRzdGF0ZS5nbygnYXBwLmFsbCcpO1xuXG5cdFx0fTtcblxuXHRcdEVkaXR0b2RvQ29udHJvbGxlci5jYW5jZWxFZGl0ID0gZnVuY3Rpb24oKSB7XG5cdFx0XHQkc3RhdGUuZ28oJ2FwcC5hbGwnKTtcdFx0XHRcblx0XHR9O1xuXG5cdH1cblxufSkoKTsiXSwic291cmNlUm9vdCI6Ii9zb3VyY2UvIn0=