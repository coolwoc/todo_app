!function(){"use strict";function t(t,e,o){t.otherwise("/"),o.state("login",{url:"",views:{"content@":{templateUrl:"html/login/login.index.html",controller:"LoginController",controllerAs:"login"}}}).state("app",{url:"/content",views:{menu:{templateUrl:"html/menu/menu.index.html",controller:"MenuController",controllerAs:"menuData"},"content@":{templateUrl:"html/content/content.index.html",controller:"Contentcontroller",controllerAs:"content"}}})}angular.module("app",[]);angular.module("app",["ui.router","ngAnimate","ngResource","app.api","app.global","app.menu","app.login","app.main","app.utility","app.alltodo","app.next","app.today","app.content","app.archive"]).constant("sitename","applocal").constant("apibase","http://localhost:3000").constant("apiversion","/v1.0").config(t),t.$inject=["$urlRouterProvider","$httpProvider","$stateProvider"]}(),function(){"use strict";function t(t,e){return t(e+"/userlogin",{},{get:{method:"GET",isArray:!0}})}function e(){return{isError:function(t){return 1==t?!0:!1}}}function o(){var t;return{get:function(){return t=localStorage.getItem("id_token")},set:function(e){return localStorage.setItem("id_token",e),t=e}}}function n(t,e){return t(e+"/userlogin")}function a(t,e){return t(e+"/mainmenu",{},{get:{method:"GET"},save:{method:"POST"},query:{method:"GET",isArray:!0},"delete":{method:"DELETE"}})}function l(t,e){return t(e+"/project",{},{get:{method:"GET"},save:{method:"POST"},query:{method:"GET",isArray:!0},"delete":{method:"DELETE"}})}function r(t,e){return t(e+"/labels",{},{get:{method:"GET"},save:{method:"POST"},query:{method:"GET",isArray:!0},"delete":{method:"DELETE"}})}function i(t,e){return t(e+"/filters",{},{get:{method:"GET"},save:{method:"POST"},query:{method:"GET",isArray:!0},"delete":{method:"DELETE"}})}function s(t,e){var o=function(t){return t=angular.fromJson(t),t.dateNum=new Date(t.dateNum),t};return t(e+"/task/:id",{id:"@id"},{get:{method:"GET",transformResponse:o},save:{method:"POST"},update:{method:"PUT"},query:{method:"GET",isArray:!0},remove:{method:"DELETE"},"delete":{method:"DELETE"}})}function u(){var t=[],e=function(e){t.push(e)},o=function(){return t};return{addIdData:e,getIdData:o}}angular.module("app.api",[]),angular.module("app.api").factory("Login",t),t.$inject=["$resource","apibase"],angular.module("app.api").factory("Statuscode",e),angular.module("app.api").factory("Token",o),angular.module("app.api").factory("User",n),n.$inject=["$resource","apibase"],angular.module("app.api").factory("Menulist",a),a.$inject=["$resource","apibase"],angular.module("app.api").factory("Projectlist",l),l.$inject=["$resource","apibase"],angular.module("app.api").factory("Projectlabel",r),r.$inject=["$resource","apibase"],angular.module("app.api").factory("Projectfilter",i),i.$inject=["$resource","apibase"],angular.module("app.api").factory("Alltasks",s),s.$inject=["$resource","apibase"],angular.module("app.api").service("isId",u)}(),function(){"use strict";angular.module("app.global",[]).filter("pagination",function(){return function(t,e){return e=+e,t.slice(e)}})}(),function(){"use strict";function t(t){}function e(){function t(t,e,o){e.on("click",function(){$(".wrapper").toggleClass("panelAnimates"),e.find("span").html("Open"==$(".closeBtn span").text()?"Close":"Open")})}var e={link:t,restrict:"A"};return e}angular.module("app.content",[]).controller("Contentcontroller",t).directive("toggleElm",e),t.$inject=["$scope"]}(),function(){"use strict";function t(t,e){var o=this;o.submitted=!1,o.submitLogin=function(){o.userlogin={},o.userlogin={email:o.email,pass:o.pass};var n=[];n=e.get(o.userlogin,function(){"undefined"==typeof o.userlogin.email?l():a()});var a=function(){t.go("app")},l=function(){$(".errorLogin").css({display:"block"})};$("input").val("")}}angular.module("app.login",[]).controller("LoginController",t),t.$inject=["$state","Login"]}(),function(){"use strict";function t(){}angular.module("app.main",[]).controller("MainController",t)}(),function(){"use strict";function t(t,e,o,n,a){var l=this;l.menuList=t.query(),l.projectList=e.query(),l.projectLabel=o.query(),l.projectFilter=n.query()}function e(){function t(t,e,o){e.on("click",function(){var t=$(".content .closeBtn").find("span");$(".wrapper").toggleClass("panelAnimates"),t.html("Close"==t.text()?"Open":"Close")})}var e={link:t,restrict:"A"};return e}angular.module("app.menu",[]).controller("MenuController",t).directive("elmPanel",e),t.$inject=["Menulist","Projectlist","Projectlabel","Projectfilter","$stateParams"]}(),function(){"use strict";function t(){var t=this;t.time=new Date}angular.module("app.utility",[]).controller("UtilitiesController",t)}(),function(){"use strict";function t(t){t.state("app.all",{url:"/alltask/:id",views:{"utilities@app":{templateUrl:"html/utilities/utilities.index.html",controller:"UtilitiesController",controllerAs:"utilities"},"main@app":{params:["id"],templateUrl:"html/main/main.all/all.index.html",controller:"AlltaskController",controllerAs:"todo"}}})}function e(t,e,o){var n=this;n.numberCurrent=0,n.pageSize=3,n.allTasks=t.query(),n.numberOfPages=function(){return Math.ceil(n.allTasks.length/n.pageSize)},n.removeTask=function(e){t["delete"]({},{id:e.id},function(){n.allTasks=t.query()})},n.editTask=function(t){o.addIdData(t.id),e.go("app.edit")}}angular.module("app.alltodo",["app.alltodo.create","app.alltodo.edit"]).config(t).controller("AlltaskController",e),t.$inject=["$stateProvider"],e.$inject=["Alltasks","$state","isId"]}(),function(){"use strict";function t(t,e){t.state("app.archive",{url:"/archive",views:{"utilities@app":{templateUrl:"html/utilities/utilities.index.html",controller:"UtilitiesController",controllerAs:"utilities"},"main@app":{templateUrl:"html/main/main.archived/archived.index.html",controller:"controllerArchive",controllerAs:"archived"}}})}function e(){}angular.module("app.archive",[]).config(t).controller("controllerArchive",e),t.$inject=["$stateProvider","$urlRouterProvider"]}(),function(){"use strict";function t(t,e){t.state("app.next",{url:"/next/:id",views:{"utilities@app":{templateUrl:"html/utilities/utilities.index.html",controller:"UtilitiesController",controllerAs:"utilities"},"main@app":{templateUrl:"html/main/main.taskSeven/seven.index.html",controller:"controllerNextDays",controllerAs:"nextSeven"}}})}function e(t,e){var o=this;o.todayDate=moment().format("L"),o.weekDate=moment().weekday(7).format("L"),console.log(o.todayDate),console.log(o.weekDate),o.nextSevenEvents=t.query({},function(){var t=[];angular.forEach(o.nextSevenEvents,function(e,n){moment(e.dateNum).format("L")>=o.todayDate&&moment(e.dateNum).format("L")<=o.weekDate&&t.push(e)}),o.nextSevenEvents=t})}angular.module("app.next",[]).config(t).controller("controllerNextDays",e),t.$inject=["$stateProvider","$urlRouterProvider"],e.$inject=["Alltasks","$state"]}(),function(){"use strict";function t(t,e){t.state("app.today",{url:"/today",views:{"utilities@app":{templateUrl:"html/utilities/utilities.index.html",controller:"UtilitiesController",controllerAs:"utilities"},"main@app":{templateUrl:"html/main/main.today/today.index.html",controller:"TodayController",controllerAs:"today"}}})}function e(t,e){var o=this;o.todayDate=moment().format("L"),o.todoTasks=t.query({},function(){var t=[];angular.forEach(o.todoTasks,function(e,n){o.todayDate==moment(e.dateNum).format("L")&&t.push(e)}),o.todoTasks=t})}angular.module("app.today",[]).config(t).controller("TodayController",e),t.$inject=["$stateProvider","$urlRouterProvider"],e.$inject=["Alltasks","$state"]}(),function(){"use strict";function t(t){t.state("app.create",{url:"/alltask/create",views:{"overlay@":{templateUrl:"/html/main/main.all/create.all/create.all.html",controller:"CreatetodoController",controllerAs:"createTodo"},"main@app":{templateUrl:"html/main/main.all/all.index.html",controller:"AlltaskController",controllerAs:"todo"}}})}function e(t,e,o){var n=this;n.submitted=!1,n.priority=e.query(),n.user=o.query({},function(){var t=[];angular.forEach(n.user,function(e,o){t.push(n.user[o].name)}),n.user=t}),n.createTask=function(){n.formAddTasks.$valid?(n.data={},n.data={project:n.project,label:n.label,name:n.name,dateNum:n.dateNum,headerComment:n.headerComment,comment:n.comment,done:n.done},console.log(n.data.done),t.save(n.data),$("form").find("input").val(""),$("p.msg-error").removeClass("msg-error")):($("form").find("p").addClass("msg-error"),n.submitted=!0)},n.resetVal=function(){$("form").find("input").val("")}}angular.module("app.alltodo.create",["app.alltodo"]).config(t).controller("CreatetodoController",e),t.$inject=["$stateProvider"],e.$inject=["Alltasks","Projectlabel","User"]}(),function(){"use strict";function t(t){t.state("app.edit",{url:"/alltask/edit",views:{"overlay@":{templateUrl:"/html/main/main.all/edit.all/edit.all.html",controller:"EdittodoController",controllerAs:"editTodo"},"main@app":{templateUrl:"html/main/main.all/all.index.html",controller:"AlltaskController",controllerAs:"todo"}}})}function e(t,e,o){var n=this,a=t.getIdData();n.idEdit=a[0],n.task=e.get({},{id:a[0]}),n.editTask=function(){n.newTask={id:a[0],project:n.task.project,label:n.task.label,name:n.task.name,dateNum:n.task.dateNum,headerComment:n.task.headerComment,comment:n.task.comment,done:n.task.done},n.newTask.dateNum=new Date(n.task.dateNum),e.update(n.newTask),o.go("app.all")},n.cancelEdit=function(){o.go("app.all")}}angular.module("app.alltodo.edit",["app.alltodo"]).config(t).controller("EdittodoController",e),t.$inject=["$stateProvider"],e.$inject=["isId","Alltasks","$state"]}();
//# sourceMappingURL=data:application/json;base64,