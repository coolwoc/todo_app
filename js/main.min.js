!function(){"use strict";function t(t,e,n){t.otherwise("/login"),n.state("login",{url:"/login",views:{"content@":{templateUrl:"html/login/login.index.html",controller:"LoginController",controllerAs:"login"}}}).state("login.register",{url:"/register",views:{"content@":{templateUrl:"html/register/register.index.html",controller:"RegisterController",controllerAs:"register"}}}).state("app",{url:"/content",views:{menu:{templateUrl:"html/menu/menu.index.html",controller:"MenuController",controllerAs:"menuData"},"content@":{templateUrl:"html/content/content.index.html",controller:"Contentcontroller",controllerAs:"content"}}})}function e(t,e,n,r){t.globals=n.get("globals")||{},t.globals.currentUser&&(r.defaults.headers.common.Authorization="Basic"+t.globals.currentUser.authdata),t.$on("$locationChangeStart",function(n,r,o){var a=-1===$.inArray(e.path(),["/login"]),l=t.globals.currentUser;a&&!l&&e.path("/login")})}angular.module("app",[]);angular.module("app",["ui.router","ngAnimate","ngResource","ngCookies","app.api","app.global","app.menu","app.login","app.register","app.main","app.utility","app.alltodo","app.next","app.today","app.content","app.archive"]).constant("sitename","applocal").constant("apibase","http://localhost:3000").constant("apiversion","/v1.0").config(t).run(e),t.$inject=["$urlRouterProvider","$httpProvider","$stateProvider"],e.$inject=["$rootScope","$location","$cookieStore","$http"]}(),function(){"use strict";function t(t,e,n,r,o,a){function l(t,e,n){console.log("authentication login"),r(function(){var r;o.GetByUsername(t).then(function(t){null!==t&&t.password===e?(console.log("isOK!"),r={success:!0}):(console.log("isNOTok!"),r={success:!1,message:"Username or password is incorrect"}),n(r)})},1e3)}function i(r,o){var a=c.encode(r+":"+o);console.log(a),n.globals={currentUser:{username:r,authdata:a}},t.defaults.headers.common.Authorization="Basic "+a,e.put("globals",n.globals)}function s(){n.globals={},e.remove("globals"),t.defaults.headers.common.Authorization="Basic "}var u={};return u.Login=l,u.SetCredentials=i,u.ClearCredentials=s,u}function e(t,e){function n(){return t.get(e+"/userlogin").then(s,c("Error getting all users"))}function r(n){return t.get(e+"/userlogin"+n).then(s,c("Error getting user by id"))}function o(n){return t.get(e+"/userlogin?"+n).then(s,c("Error getting user by username"))}function a(n){return t.post(e+"/userlogin",n).then(s,c("Error creating user"))}function l(n){return t.put(e+"/userlogin"+n.id,n).then(s,c("Error updating user"))}function i(n){return t["delete"](e+"/userlogin"+n).then(s,c("Error deleting user"))}function s(t){return console.log(t),t.data}function c(t){return function(){return console.log(t),{success:!1,message:t}}}var u={};return u.GetAll=n,u.GetById=r,u.GetByUsername=o,u.Create=a,u.Update=l,u.Delete=i,u}function n(){return{isError:function(t){return 1==t?!0:!1}}}function r(t,e){return t(e+"/mainmenu",{},{get:{method:"GET"},save:{method:"POST"},query:{method:"GET",isArray:!0},"delete":{method:"DELETE"}})}function o(t,e){return t(e+"/project",{},{get:{method:"GET"},save:{method:"POST"},query:{method:"GET",isArray:!0},"delete":{method:"DELETE"}})}function a(t,e){return t(e+"/labels",{},{get:{method:"GET"},save:{method:"POST"},query:{method:"GET",isArray:!0},"delete":{method:"DELETE"}})}function l(t,e){return t(e+"/filters",{},{get:{method:"GET"},save:{method:"POST"},query:{method:"GET",isArray:!0},"delete":{method:"DELETE"}})}function i(t,e){var n=function(t){return t=angular.fromJson(t),t.dateNum=new Date(t.dateNum),t};return t(e+"/task/:id",{id:"@id"},{get:{method:"GET",transformResponse:n},save:{method:"POST"},update:{method:"PUT"},query:{method:"GET",isArray:!0},remove:{method:"DELETE"},"delete":{method:"DELETE"}})}function s(){var t=[],e=function(e){t=[],t.push(e)},n=function(){return t};return{addIdData:e,getIdData:n}}angular.module("app.api",[]),angular.module("app.api").factory("AuthenticationService",t),t.$inject=["$http","$cookieStore","$rootScope","$timeout","UserService","apibase"];var c={keyStr:"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=",encode:function(t){var e,n,r,o,a,l="",i="",s="",c=0;do e=t.charCodeAt(c++),n=t.charCodeAt(c++),i=t.charCodeAt(c++),r=e>>2,o=(3&e)<<4|n>>4,a=(15&n)<<2|i>>6,s=63&i,isNaN(n)?a=s=64:isNaN(i)&&(s=64),l=l+this.keyStr.charAt(r)+this.keyStr.charAt(o)+this.keyStr.charAt(a)+this.keyStr.charAt(s),e=n=i="",r=o=a=s="";while(c<t.length);return l},decode:function(t){var e,n,r,o,a,l="",i="",s="",c=0,u=/[^A-Za-z0-9\+\/\=]/g;u.exec(t)&&window.alert("There were invalid base64 characters in the input text.\nValid base64 characters are A-Z, a-z, 0-9, '+', '/',and '='\nExpect errors in decoding."),t=t.replace(/[^A-Za-z0-9\+\/\=]/g,"");do r=this.keyStr.indexOf(t.charAt(c++)),o=this.keyStr.indexOf(t.charAt(c++)),a=this.keyStr.indexOf(t.charAt(c++)),s=this.keyStr.indexOf(t.charAt(c++)),e=r<<2|o>>4,n=(15&o)<<4|a>>2,i=(3&a)<<6|s,l+=String.fromCharCode(e),64!=a&&(l+=String.fromCharCode(n)),64!=s&&(l+=String.fromCharCode(i)),e=n=i="",r=o=a=s="";while(c<t.length);return l}};angular.module("app.api").factory("UserService",e),e.$inject=["$http","apibase"],angular.module("app.api").factory("Statuscode",n),angular.module("app.api").factory("Menulist",r),r.$inject=["$resource","apibase"],angular.module("app.api").factory("Projectlist",o),o.$inject=["$resource","apibase"],angular.module("app.api").factory("Projectlabel",a),a.$inject=["$resource","apibase"],angular.module("app.api").factory("Projectfilter",l),l.$inject=["$resource","apibase"],angular.module("app.api").factory("Alltasks",i),i.$inject=["$resource","apibase"],angular.module("app.api").service("isId",s)}(),function(){"use strict";angular.module("app.global",[]).filter("pagination",function(){return function(t,e){return e=+e,t.slice(e)}})}(),function(){"use strict";function t(t){}function e(){function t(t,e,n){e.on("click",function(){$(".wrapper").toggleClass("panelAnimates"),e.find("span").html("Open"==$(".closeBtn span").text()?"Close":"Open")})}var e={link:t,restrict:"A"};return e}angular.module("app.content",[]).controller("Contentcontroller",t).directive("toggleElm",e),t.$inject=["$scope"]}(),function(){"use strict";function t(t,e){var n=this;!function(){e.ClearCredentials()}(),n.submitLogin=function(){e.Login(n.username,n.password,function(r){r.success?(console.log("yes"),e.SetCredentials(n.username),t.path("/content")):console.log("nope")})}}angular.module("app.login",[]).controller("LoginController",t),t.$inject=["$location","AuthenticationService"]}(),function(){"use strict";function t(){}angular.module("app.main",[]).controller("MainController",t)}(),function(){"use strict";function t(t,e,n,r,o){var a=this;a.menuList=t.query(),a.projectList=e.query(),a.projectLabel=n.query(),a.projectFilter=r.query()}function e(){function t(t,e,n){e.on("click",function(){var t=$(".content .closeBtn").find("span");$(".wrapper").toggleClass("panelAnimates"),t.html("Close"==t.text()?"Open":"Close")})}var e={link:t,restrict:"A"};return e}angular.module("app.menu",[]).controller("MenuController",t).directive("elmPanel",e),t.$inject=["Menulist","Projectlist","Projectlabel","Projectfilter","$stateParams"]}(),function(){"user strict";function t(){}angular.module("app.register",[]).controller("RegisterController",t)}(),function(){"use strict";function t(){var t=this;t.time=new Date}angular.module("app.utility",[]).controller("UtilitiesController",t)}(),function(){"use strict";function t(t){t.state("app.all",{url:"/alltask/:id",views:{"utilities@app":{templateUrl:"html/utilities/utilities.index.html",controller:"UtilitiesController",controllerAs:"utilities"},"main@app":{params:["id"],templateUrl:"html/main/main.all/all.index.html",controller:"AlltaskController",controllerAs:"todo"}}})}function e(t,e,n){var r=this;r.numberCurrent=0,r.pageSize=3,r.allTasks=t.query(),r.numberOfPages=function(){return Math.ceil(r.allTasks.length/r.pageSize)},r.removeTask=function(e){t["delete"]({},{id:e.id},function(){r.allTasks=t.query()})},r.editTask=function(t){n.addIdData(t.id),e.go("app.edit")}}angular.module("app.alltodo",["app.alltodo.create","app.alltodo.edit"]).config(t).controller("AlltaskController",e),t.$inject=["$stateProvider"],e.$inject=["Alltasks","$state","isId"]}(),function(){"use strict";function t(t,e){t.state("app.archive",{url:"/archive",views:{"utilities@app":{templateUrl:"html/utilities/utilities.index.html",controller:"UtilitiesController",controllerAs:"utilities"},"main@app":{templateUrl:"html/main/main.archived/archived.index.html",controller:"controllerArchive",controllerAs:"archived"}}})}function e(){}angular.module("app.archive",[]).config(t).controller("controllerArchive",e),t.$inject=["$stateProvider","$urlRouterProvider"]}(),function(){"use strict";function t(t,e){t.state("app.next",{url:"/next/:id",views:{"utilities@app":{templateUrl:"html/utilities/utilities.index.html",controller:"UtilitiesController",controllerAs:"utilities"},"main@app":{templateUrl:"html/main/main.taskSeven/seven.index.html",controller:"controllerNextDays",controllerAs:"nextSeven"}}})}function e(t,e,n){var r=this;r.todayDate=moment().format("L"),r.weekDate=moment().weekday(7).format("L"),r.nextSevenEvents=t.query({},function(){var t=[];angular.forEach(r.nextSevenEvents,function(e,n){moment(e.dateNum).format("L")>=r.todayDate&&moment(e.dateNum).format("L")<=r.weekDate&&t.push(e)}),r.nextSevenEvents=t}),r.removeTask=function(e){t["delete"]({},{id:e.id},function(){AlltaskController.allTasks=t.query()})},r.editTask=function(t){n.addIdData(t.id),e.go("app.edit")}}angular.module("app.next",[]).config(t).controller("controllerNextDays",e),t.$inject=["$stateProvider","$urlRouterProvider"],e.$inject=["Alltasks","$state","isId"]}(),function(){"use strict";function t(t,e){t.state("app.today",{url:"/today",views:{"utilities@app":{templateUrl:"html/utilities/utilities.index.html",controller:"UtilitiesController",controllerAs:"utilities"},"main@app":{templateUrl:"html/main/main.today/today.index.html",controller:"TodayController",controllerAs:"today"}}})}function e(t,e,n){var r=this;r.todayDate=moment().format("L"),r.todoTasks=t.query({},function(){var t=[];angular.forEach(r.todoTasks,function(e,n){r.todayDate==moment(e.dateNum).format("L")&&t.push(e)}),r.todoTasks=t}),r.removeTask=function(e){t["delete"]({},{id:e.id},function(){AlltaskController.allTasks=t.query()})},r.editTask=function(t){n.addIdData(t.id),e.go("app.edit")}}angular.module("app.today",[]).config(t).controller("TodayController",e),t.$inject=["$stateProvider","$urlRouterProvider"],e.$inject=["Alltasks","$state","isId"]}(),function(){"use strict";function t(t){t.state("app.create",{url:"/alltask/create",views:{"overlay@":{templateUrl:"/html/main/main.all/create.all/create.all.html",controller:"CreatetodoController",controllerAs:"createTodo"},"main@app":{templateUrl:"html/main/main.all/all.index.html",controller:"AlltaskController",controllerAs:"todo"}}})}function e(t,e,n){var r=this;r.submitted=!1,r.priority=e.query(),r.user=n.query({},function(){var t=[];angular.forEach(r.user,function(e,n){t.push(r.user[n].name)}),r.user=t}),r.createTask=function(){r.formAddTasks.$valid?(r.data={},r.data={project:r.project,label:r.label,name:r.name,dateNum:r.dateNum,headerComment:r.headerComment,comment:r.comment,done:r.done},console.log(r.data.done),t.save(r.data),$("form").find("input").val(""),$("p.msg-error").removeClass("msg-error")):($("form").find("p").addClass("msg-error"),r.submitted=!0)},r.resetVal=function(){$("form").find("input").val("")}}angular.module("app.alltodo.create",["app.alltodo"]).config(t).controller("CreatetodoController",e),t.$inject=["$stateProvider"],e.$inject=["Alltasks","Projectlabel","User"]}(),function(){"use strict";function t(t){t.state("app.edit",{url:"/alltask/edit",views:{"overlay@":{templateUrl:"/html/main/main.all/edit.all/edit.all.html",controller:"EdittodoController",controllerAs:"editTodo"},"main@app":{templateUrl:"html/main/main.all/all.index.html",controller:"AlltaskController",controllerAs:"todo"}}})}function e(t,e,n){var r=this,o=t.getIdData();r.idEdit=o[0],r.task=e.get({},{id:o[0]}),r.editTask=function(){r.newTask={id:o[0],project:r.task.project,label:r.task.label,name:r.task.name,dateNum:r.task.dateNum,headerComment:r.task.headerComment,comment:r.task.comment,done:r.task.done},r.newTask.dateNum=new Date(r.task.dateNum),e.update(r.newTask),n.go("app.all")},r.cancelEdit=function(){n.go("app.all")}}angular.module("app.alltodo.edit",["app.alltodo"]).config(t).controller("EdittodoController",e),t.$inject=["$stateProvider"],e.$inject=["isId","Alltasks","$state"]}();
//# sourceMappingURL=data:application/json;base64,