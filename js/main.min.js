!function(){"use strict";function t(t,e,n){t.otherwise("/"),n.state("login",{url:"",views:{"content@":{templateUrl:"html/login/login.index.html",controller:"LoginController",controllerAs:"login"}}}).state("app",{url:"/content",views:{menu:{templateUrl:"html/menu/menu.index.html",controller:"MenuController",controllerAs:"menuData"},"content@":{templateUrl:"html/content/content.index.html",controller:"Contentcontroller",controllerAs:"content"}}})}angular.module("app",[]);angular.module("app",["ui.router","ngAnimate","ngResource","app.api","app.global","app.menu","app.login","app.main","app.utility","app.alltodo","app.next","app.today","app.content","app.archive"]).constant("sitename","applocal").constant("apibase","http://localhost:3000").constant("apiversion","/v1.0").config(t),t.$inject=["$urlRouterProvider","$httpProvider","$stateProvider"]}(),function(){"use strict";function t(t,e){return t(e+"/userlogin",{},{get:{method:"GET",isArray:!0}})}function e(){return{isError:function(t){return 1==t?!0:!1}}}function n(){var t;return{get:function(){return t=localStorage.getItem("id_token")},set:function(e){return localStorage.setItem("id_token",e),t=e}}}function o(t,e){return t(e+"/userlogin")}function a(t,e){return t(e+"/mainmenu",{},{get:{method:"GET"},save:{method:"POST"},query:{method:"GET",isArray:!0},"delete":{method:"DELETE"}})}function l(t,e){return t(e+"/project",{},{get:{method:"GET"},save:{method:"POST"},query:{method:"GET",isArray:!0},"delete":{method:"DELETE"}})}function r(t,e){return t(e+"/labels",{},{get:{method:"GET"},save:{method:"POST"},query:{method:"GET",isArray:!0},"delete":{method:"DELETE"}})}function i(t,e){return t(e+"/filters",{},{get:{method:"GET"},save:{method:"POST"},query:{method:"GET",isArray:!0},"delete":{method:"DELETE"}})}function s(t,e){var n=function(t){return t=angular.fromJson(t),t.dateNum=new Date(t.dateNum),t};return t(e+"/task/:id",{id:"@id"},{get:{method:"GET",transformResponse:n},save:{method:"POST"},update:{method:"PUT"},query:{method:"GET",isArray:!0},remove:{method:"DELETE"},"delete":{method:"DELETE"}})}function u(){var t=[],e=function(e){t=[],t.push(e)},n=function(){return t};return{addIdData:e,getIdData:n}}angular.module("app.api",[]),angular.module("app.api").factory("Login",t),t.$inject=["$resource","apibase"],angular.module("app.api").factory("Statuscode",e),angular.module("app.api").factory("Token",n),angular.module("app.api").factory("User",o),o.$inject=["$resource","apibase"],angular.module("app.api").factory("Menulist",a),a.$inject=["$resource","apibase"],angular.module("app.api").factory("Projectlist",l),l.$inject=["$resource","apibase"],angular.module("app.api").factory("Projectlabel",r),r.$inject=["$resource","apibase"],angular.module("app.api").factory("Projectfilter",i),i.$inject=["$resource","apibase"],angular.module("app.api").factory("Alltasks",s),s.$inject=["$resource","apibase"],angular.module("app.api").service("isId",u)}(),function(){"use strict";angular.module("app.global",[]).filter("pagination",function(){return function(t,e){return e=+e,t.slice(e)}})}(),function(){"use strict";function t(t){}function e(){function t(t,e,n){e.on("click",function(){$(".wrapper").toggleClass("panelAnimates"),e.find("span").html("Open"==$(".closeBtn span").text()?"Close":"Open")})}var e={link:t,restrict:"A"};return e}angular.module("app.content",[]).controller("Contentcontroller",t).directive("toggleElm",e),t.$inject=["$scope"]}(),function(){"use strict";function t(t,e){var n=this;n.submitted=!1,n.submitLogin=function(){n.userlogin={},n.userlogin={email:n.email,pass:n.pass};var o=[];o=e.get(n.userlogin,function(){"undefined"==typeof n.userlogin.email?l():a()});var a=function(){t.go("app")},l=function(){$(".errorLogin").css({display:"block"})};$("input").val("")}}angular.module("app.login",[]).controller("LoginController",t),t.$inject=["$state","Login"]}(),function(){"use strict";function t(){}angular.module("app.main",[]).controller("MainController",t)}(),function(){"use strict";function t(t,e,n,o,a){var l=this;l.menuList=t.query(),l.projectList=e.query(),l.projectLabel=n.query(),l.projectFilter=o.query()}function e(){function t(t,e,n){e.on("click",function(){var t=$(".content .closeBtn").find("span");$(".wrapper").toggleClass("panelAnimates"),t.html("Close"==t.text()?"Open":"Close")})}var e={link:t,restrict:"A"};return e}angular.module("app.menu",[]).controller("MenuController",t).directive("elmPanel",e),t.$inject=["Menulist","Projectlist","Projectlabel","Projectfilter","$stateParams"]}(),function(){"use strict";function t(){var t=this;t.time=new Date}angular.module("app.utility",[]).controller("UtilitiesController",t)}(),function(){"use strict";function t(t){t.state("app.all",{url:"/alltask/:id",views:{"utilities@app":{templateUrl:"html/utilities/utilities.index.html",controller:"UtilitiesController",controllerAs:"utilities"},"main@app":{params:["id"],templateUrl:"html/main/main.all/all.index.html",controller:"AlltaskController",controllerAs:"todo"}}})}function e(t,e,n){var o=this;o.numberCurrent=0,o.pageSize=3,o.allTasks=t.query(),o.numberOfPages=function(){return Math.ceil(o.allTasks.length/o.pageSize)},o.removeTask=function(e){t["delete"]({},{id:e.id},function(){o.allTasks=t.query()})},o.editTask=function(t){n.addIdData(t.id),e.go("app.edit")}}angular.module("app.alltodo",["app.alltodo.create","app.alltodo.edit"]).config(t).controller("AlltaskController",e),t.$inject=["$stateProvider"],e.$inject=["Alltasks","$state","isId"]}(),function(){"use strict";function t(t,e){t.state("app.archive",{url:"/archive",views:{"utilities@app":{templateUrl:"html/utilities/utilities.index.html",controller:"UtilitiesController",controllerAs:"utilities"},"main@app":{templateUrl:"html/main/main.archived/archived.index.html",controller:"controllerArchive",controllerAs:"archived"}}})}function e(){}angular.module("app.archive",[]).config(t).controller("controllerArchive",e),t.$inject=["$stateProvider","$urlRouterProvider"]}(),function(){"use strict";function t(t,e){t.state("app.next",{url:"/next/:id",views:{"utilities@app":{templateUrl:"html/utilities/utilities.index.html",controller:"UtilitiesController",controllerAs:"utilities"},"main@app":{templateUrl:"html/main/main.taskSeven/seven.index.html",controller:"controllerNextDays",controllerAs:"nextSeven"}}})}function e(t,e,n){var o=this;o.todayDate=moment().format("L"),o.weekDate=moment().weekday(7).format("L"),o.nextSevenEvents=t.query({},function(){var t=[];angular.forEach(o.nextSevenEvents,function(e,n){moment(e.dateNum).format("L")>=o.todayDate&&moment(e.dateNum).format("L")<=o.weekDate&&t.push(e)}),o.nextSevenEvents=t}),o.removeTask=function(e){t["delete"]({},{id:e.id},function(){AlltaskController.allTasks=t.query()})},o.editTask=function(t){n.addIdData(t.id),e.go("app.edit")}}angular.module("app.next",[]).config(t).controller("controllerNextDays",e),t.$inject=["$stateProvider","$urlRouterProvider"],e.$inject=["Alltasks","$state","isId"]}(),function(){"use strict";function t(t,e){t.state("app.today",{url:"/today",views:{"utilities@app":{templateUrl:"html/utilities/utilities.index.html",controller:"UtilitiesController",controllerAs:"utilities"},"main@app":{templateUrl:"html/main/main.today/today.index.html",controller:"TodayController",controllerAs:"today"}}})}function e(t,e,n){var o=this;o.todayDate=moment().format("L"),o.todoTasks=t.query({},function(){var t=[];angular.forEach(o.todoTasks,function(e,n){o.todayDate==moment(e.dateNum).format("L")&&t.push(e)}),o.todoTasks=t}),o.removeTask=function(e){t["delete"]({},{id:e.id},function(){AlltaskController.allTasks=t.query()})},o.editTask=function(t){n.addIdData(t.id),e.go("app.edit")}}angular.module("app.today",[]).config(t).controller("TodayController",e),t.$inject=["$stateProvider","$urlRouterProvider"],e.$inject=["Alltasks","$state","isId"]}(),function(){"use strict";function t(t){t.state("app.edit",{url:"/alltask/edit",views:{"overlay@":{templateUrl:"/html/main/main.all/edit.all/edit.all.html",controller:"EdittodoController",controllerAs:"editTodo"},"main@app":{templateUrl:"html/main/main.all/all.index.html",controller:"AlltaskController",controllerAs:"todo"}}})}function e(t,e,n){var o=this,a=t.getIdData();o.idEdit=a[0],o.task=e.get({},{id:a[0]}),o.editTask=function(){o.newTask={id:a[0],project:o.task.project,label:o.task.label,name:o.task.name,dateNum:o.task.dateNum,headerComment:o.task.headerComment,comment:o.task.comment,done:o.task.done},o.newTask.dateNum=new Date(o.task.dateNum),e.update(o.newTask),n.go("app.all")},o.cancelEdit=function(){n.go("app.all")}}angular.module("app.alltodo.edit",["app.alltodo"]).config(t).controller("EdittodoController",e),t.$inject=["$stateProvider"],e.$inject=["isId","Alltasks","$state"]}(),function(){"use strict";function t(t){t.state("app.create",{url:"/alltask/create",views:{"overlay@":{templateUrl:"/html/main/main.all/create.all/create.all.html",controller:"CreatetodoController",controllerAs:"createTodo"},"main@app":{templateUrl:"html/main/main.all/all.index.html",controller:"AlltaskController",controllerAs:"todo"}}})}function e(t,e,n){var o=this;o.submitted=!1,o.priority=e.query(),o.user=n.query({},function(){var t=[];angular.forEach(o.user,function(e,n){t.push(o.user[n].name)}),o.user=t}),o.createTask=function(){o.formAddTasks.$valid?(o.data={},o.data={project:o.project,label:o.label,name:o.name,dateNum:o.dateNum,headerComment:o.headerComment,comment:o.comment,done:o.done},console.log(o.data.done),t.save(o.data),$("form").find("input").val(""),$("p.msg-error").removeClass("msg-error")):($("form").find("p").addClass("msg-error"),o.submitted=!0)},o.resetVal=function(){$("form").find("input").val("")}}angular.module("app.alltodo.create",["app.alltodo"]).config(t).controller("CreatetodoController",e),t.$inject=["$stateProvider"],e.$inject=["Alltasks","Projectlabel","User"]}();
//# sourceMappingURL=data:application/json;base64,