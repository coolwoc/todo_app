!function(){"use strict";function t(t,e,a){t.otherwise("/login"),a.state("login",{url:"/login",views:{"content@":{templateUrl:"html/login/login.index.html",controller:"LoginController",controllerAs:"login"}}}).state("login.register",{url:"/register",views:{"content@":{templateUrl:"html/register/register.index.html",controller:"RegisterController",controllerAs:"register"}}}).state("app",{url:"/content",views:{menu:{templateUrl:"html/menu/menu.index.html",controller:"MenuController",controllerAs:"menuData"},"content@":{templateUrl:"html/content/content.index.html",controller:"Contentcontroller",controllerAs:"content"}}})}function e(){}angular.module("app",[]);angular.module("app",["ui.router","ngAnimate","ngResource","ngStorage","app.api","app.global","app.menu","app.login","app.register","app.main","app.utility","app.alltodo","app.next","app.today","app.content","app.archive"]).constant("sitename","applocal").constant("apibase","http://localhost:3000").constant("apiversion","/v1.0").config(t).run(e),t.$inject=["$urlRouterProvider","$httpProvider","$stateProvider"]}(),function(){"use strict";function t(t,e){return t(e+"/userlogin",{},{get:{method:"GET",isArray:!0},save:{method:"POST"},query:{method:"GET",isArray:!0},"delete":{method:"DELETE"}})}function e(t,e){return t(e+"/mainmenu",{},{get:{method:"GET"},save:{method:"POST"},query:{method:"GET",isArray:!0},"delete":{method:"DELETE"}})}function a(t,e){return t(e+"/project",{},{get:{method:"GET"},save:{method:"POST"},query:{method:"GET",isArray:!0},"delete":{method:"DELETE"}})}function r(t,e){return t(e+"/labels",{},{get:{method:"GET"},save:{method:"POST"},query:{method:"GET",isArray:!0},"delete":{method:"DELETE"}})}function o(t,e){return t(e+"/filters",{},{get:{method:"GET"},save:{method:"POST"},query:{method:"GET",isArray:!0},"delete":{method:"DELETE"}})}function n(t,e){var a=function(t){return t=angular.fromJson(t),t.dateNum=new Date(t.dateNum),t};return t(e+"/task/:id",{id:"@id"},{get:{method:"GET",transformResponse:a},save:{method:"POST"},update:{method:"PUT"},query:{method:"GET",isArray:!0},remove:{method:"DELETE"},"delete":{method:"DELETE"}})}function l(){var t=[],e=function(e){t=[],t.push(e)},a=function(){return t};return{addIdData:e,getIdData:a}}function i(){return{isError:function(t){return 1==t?!0:!1}}}angular.module("app.api",[]),angular.module("app.api").factory("Login",t),t.$inject=["$resource","apibase"],angular.module("app.api").factory("Menulist",e),e.$inject=["$resource","apibase"],angular.module("app.api").factory("Projectlist",a),a.$inject=["$resource","apibase"],angular.module("app.api").factory("Projectlabel",r),r.$inject=["$resource","apibase"],angular.module("app.api").factory("Projectfilter",o),o.$inject=["$resource","apibase"],angular.module("app.api").factory("Alltasks",n),n.$inject=["$resource","apibase"],angular.module("app.api").service("isId",l),angular.module("app.api").factory("statuscode",i)}(),function(){"use strict";angular.module("app.global",[]).filter("pagination",function(){return function(t,e){return e=+e,t.slice(e)}})}(),function(){"use strict";function t(t){}function e(){function t(t,e,a){e.on("click",function(){$(".wrapper").toggleClass("panelAnimates"),e.find("span").html("Open"==$(".closeBtn span").text()?"Close":"Open")})}var e={link:t,restrict:"A"};return e}angular.module("app.content",[]).controller("Contentcontroller",t).directive("toggleElm",e),t.$inject=["$scope"]}(),function(){"use strict";function t(t,e,a,r){var o=this;o.submitLogin=function(){o.userlogin={},o.userlogin={username:o.username,password:o.password};var a=[];a=r.get(o.userlogin,function(){"undefined"!=o.password&&a[0].password==o.password?n():l()});var n=function(){t.username=o.username,e.go("app")},l=function(){o.errorData="Please check all the form fields and your credentials."}}}angular.module("app.login",[]).controller("LoginController",t),t.$inject=["$localStorage","$state","statuscode","Login"]}(),function(){"use strict";function t(){}angular.module("app.main",[]).controller("MainController",t)}(),function(){"use strict";function t(t,e,a,r,o){var n=this;n.menuList=t.query(),n.projectList=e.query(),n.projectLabel=a.query(),n.projectFilter=r.query()}function e(){function t(t,e,a){e.on("click",function(){var t=$(".content .closeBtn").find("span");$(".wrapper").toggleClass("panelAnimates"),t.html("Close"==t.text()?"Open":"Close")})}var e={link:t,restrict:"A"};return e}angular.module("app.menu",[]).controller("MenuController",t).directive("elmPanel",e),t.$inject=["Menulist","Projectlist","Projectlabel","Projectfilter","$stateParams"]}(),function(){"user strict";function t(t,e){var a=this;a.submitRegister=function(){a.formRegister.$valid?(a.dataRegister={},a.dataRegister={firstName:a.firstName,lastName:a.lastName,username:a.username,mail:a.mail,password:a.password,role:"user"},e.save(a.dataRegister),$("form").find("input").val(""),t.go("app")):a.errorData="All fields are required"},a.resetVal=function(){$("form").find("input").val("")}}angular.module("app.register",[]).controller("RegisterController",t),t.$inject=["$state","Login"]}(),function(){"use strict";function t(t,e){var a=this;a.time=new Date,a.userIs=t.username,a.logOut=function(){delete t.username,e.go("login")}}angular.module("app.utility",[]).controller("UtilitiesController",t),t.$inject=["$localStorage","$state"]}(),function(){"use strict";function t(t){t.state("app.all",{url:"/alltask/:id",views:{"utilities@app":{templateUrl:"html/utilities/utilities.index.html",controller:"UtilitiesController",controllerAs:"utilities"},"main@app":{params:["id"],templateUrl:"html/main/main.all/all.index.html",controller:"AlltaskController",controllerAs:"todo"}}})}function e(t,e,a){var r=this;r.numberCurrent=0,r.pageSize=3,r.allTasks=t.query(),r.numberOfPages=function(){return Math.ceil(r.allTasks.length/r.pageSize)},r.removeTask=function(e){t["delete"]({},{id:e.id},function(){r.allTasks=t.query()})},r.editTask=function(t){a.addIdData(t.id),e.go("app.edit")}}angular.module("app.alltodo",["app.alltodo.create","app.alltodo.edit"]).config(t).controller("AlltaskController",e),t.$inject=["$stateProvider"],e.$inject=["Alltasks","$state","isId"]}(),function(){"use strict";function t(t,e){t.state("app.archive",{url:"/archive",views:{"utilities@app":{templateUrl:"html/utilities/utilities.index.html",controller:"UtilitiesController",controllerAs:"utilities"},"main@app":{templateUrl:"html/main/main.archived/archived.index.html",controller:"controllerArchive",controllerAs:"archived"}}})}function e(){}angular.module("app.archive",[]).config(t).controller("controllerArchive",e),t.$inject=["$stateProvider","$urlRouterProvider"]}(),function(){"use strict";function t(t,e){t.state("app.next",{url:"/next/:id",views:{"utilities@app":{templateUrl:"html/utilities/utilities.index.html",controller:"UtilitiesController",controllerAs:"utilities"},"main@app":{templateUrl:"html/main/main.taskSeven/seven.index.html",controller:"controllerNextDays",controllerAs:"nextSeven"}}})}function e(t,e,a){var r=this;r.todayDate=moment().format("L"),r.weekDate=moment().weekday(7).format("L"),r.nextSevenEvents=t.query({},function(){var t=[];angular.forEach(r.nextSevenEvents,function(e,a){moment(e.dateNum).format("L")>=r.todayDate&&moment(e.dateNum).format("L")<=r.weekDate&&t.push(e)}),r.nextSevenEvents=t}),r.removeTask=function(e){t["delete"]({},{id:e.id},function(){AlltaskController.allTasks=t.query()})},r.editTask=function(t){a.addIdData(t.id),e.go("app.edit")}}angular.module("app.next",[]).config(t).controller("controllerNextDays",e),t.$inject=["$stateProvider","$urlRouterProvider"],e.$inject=["Alltasks","$state","isId"]}(),function(){"use strict";function t(t,e){t.state("app.today",{url:"/today",views:{"utilities@app":{templateUrl:"html/utilities/utilities.index.html",controller:"UtilitiesController",controllerAs:"utilities"},"main@app":{templateUrl:"html/main/main.today/today.index.html",controller:"TodayController",controllerAs:"today"}}})}function e(t,e,a){var r=this;r.todayDate=moment().format("L"),r.todoTasks=t.query({},function(){var t=[];angular.forEach(r.todoTasks,function(e,a){r.todayDate==moment(e.dateNum).format("L")&&t.push(e)}),r.todoTasks=t}),r.removeTask=function(e){t["delete"]({},{id:e.id},function(){AlltaskController.allTasks=t.query()})},r.editTask=function(t){a.addIdData(t.id),e.go("app.edit")}}angular.module("app.today",[]).config(t).controller("TodayController",e),t.$inject=["$stateProvider","$urlRouterProvider"],e.$inject=["Alltasks","$state","isId"]}(),function(){"use strict";function t(t){t.state("app.create",{url:"/alltask/create",views:{"overlay@":{templateUrl:"/html/main/main.all/create.all/create.all.html",controller:"CreatetodoController",controllerAs:"createTodo"},"main@app":{templateUrl:"html/main/main.all/all.index.html",controller:"AlltaskController",controllerAs:"todo"}}})}function e(t,e,a){var r=this;r.submitted=!1,r.priority=e.query(),r.user=a.query({},function(){var t=[];angular.forEach(r.user,function(e,a){t.push(r.user[a].name)}),r.user=t}),r.createTask=function(){r.formAddTasks.$valid?(r.data={},r.data={project:r.project,label:r.label,name:r.name,dateNum:r.dateNum,headerComment:r.headerComment,comment:r.comment,done:r.done},t.save(r.data),$("form").find("input").val(""),$("p.msg-error").removeClass("msg-error")):($("form").find("p").addClass("msg-error"),r.submitted=!0)},r.resetVal=function(){$("form").find("input").val("")}}angular.module("app.alltodo.create",["app.alltodo"]).config(t).controller("CreatetodoController",e),t.$inject=["$stateProvider"],e.$inject=["Alltasks","Projectlabel","User"]}(),function(){"use strict";function t(t){t.state("app.edit",{url:"/alltask/edit",views:{"overlay@":{templateUrl:"/html/main/main.all/edit.all/edit.all.html",controller:"EdittodoController",controllerAs:"editTodo"},"main@app":{templateUrl:"html/main/main.all/all.index.html",controller:"AlltaskController",controllerAs:"todo"}}})}function e(t,e,a){var r=this,o=t.getIdData();r.idEdit=o[0],r.task=e.get({},{id:o[0]}),r.editTask=function(){r.newTask={id:o[0],project:r.task.project,label:r.task.label,name:r.task.name,dateNum:r.task.dateNum,headerComment:r.task.headerComment,comment:r.task.comment,done:r.task.done},r.newTask.dateNum=new Date(r.task.dateNum),e.update(r.newTask),a.go("app.all")},r.cancelEdit=function(){a.go("app.all")}}angular.module("app.alltodo.edit",["app.alltodo"]).config(t).controller("EdittodoController",e),t.$inject=["$stateProvider"],e.$inject=["isId","Alltasks","$state"]}();
//# sourceMappingURL=data:application/json;base64,