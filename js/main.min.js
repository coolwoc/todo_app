!function(){"use strict";function t(t,e){t.state("login",{url:"",views:{"content@":{templateUrl:"html/login/login.index.html",controller:"LoginController",controllerAs:"login"}}}).state("app",{url:"/content",views:{menu:{templateUrl:"html/menu/menu.index.html",controller:"MenuController",controllerAs:"menuData"},"content@":{templateUrl:"html/content/content.index.html",controller:"Contentcontroller",controllerAs:"content"}}}),e.otherwise("/")}angular.module("app",[]);angular.module("app",["ui.router","ngAnimate","ngResource","angular-jwt","angular-storage","app.api","app.global","app.menu","app.login","app.main","app.utility","app.alltodo","app.next","app.today","app.content"]).constant("sitename","applocal").constant("apibase","http://localhost:3000").constant("apiversion","/v1.0").config(t),t.$inject=["$stateProvider","$urlRouterProvider"]}(),function(){"use strict";function t(){var t;return{get:function(){return t=localStorage.getItem("id_token")},set:function(){return localStorage.setItem("id_token",val),t=val}}}function e(t,e){var l=t(e+"/userlogin/:user",{user:"@user"});return l}function l(t,e){return t(e+"/mainmenu",{},{get:{method:"GET"},save:{method:"POST"},query:{method:"GET",isArray:!0},"delete":{method:"DELETE"}})}function n(t,e){return t(e+"/project",{},{get:{method:"GET"},save:{method:"POST"},query:{method:"GET",isArray:!0},"delete":{method:"DELETE"}})}function a(t,e){return t(e+"/labels",{},{get:{method:"GET"},save:{method:"POST"},query:{method:"GET",isArray:!0},"delete":{method:"DELETE"}})}function o(t,e){return t(e+"/filters",{},{get:{method:"GET"},save:{method:"POST"},query:{method:"GET",isArray:!0},"delete":{method:"DELETE"}})}function r(t,e){var l=function(t){return t=angular.fromJson(t),t.dateNum=new Date(t.dateNum),t};return t(e+"/task/:id",{id:"@id"},{get:{method:"GET",transformResponse:l},save:{method:"POST"},update:{method:"PUT"},query:{method:"GET",isArray:!0},remove:{method:"DELETE"},"delete":{method:"DELETE"}})}function i(){var t=[],e=function(e){t.push(e)},l=function(){return t};return{addIdData:e,getIdData:l}}angular.module("app.api",[]),angular.module("app.api").factory("Token",t),angular.module("app.api").factory("Login",e),e.$inject=["$resource","apibase"],angular.module("app.api").factory("Menulist",l),l.$inject=["$resource","apibase"],angular.module("app.api").factory("Projectlist",n),n.$inject=["$resource","apibase"],angular.module("app.api").factory("Projectlabel",a),a.$inject=["$resource","apibase"],angular.module("app.api").factory("Projectfilter",o),o.$inject=["$resource","apibase"],angular.module("app.api").factory("Alltasks",r),r.$inject=["$resource","apibase"],angular.module("app.api").service("isId",i)}(),function(){"use strict";angular.module("app.global",[]).filter("pagination",function(){return function(t,e){return e=+e,t.slice(e)}})}(),function(){"use strict";function t(t){}function e(){function t(t,e,l){e.on("click",function(){$(".wrapper").toggleClass("panelAnimates"),e.find("span").html("Open"==$(".closeBtn span").text()?"Close":"Open")})}var e={link:t,restrict:"A"};return e}angular.module("app.content",[]).controller("Contentcontroller",t).directive("toggleElm",e),t.$inject=["$scope"]}(),function(){"use strict";function t(t,e){var l=this;l.submitted=!1,l.userlogin={},l.userlogin={email:l.email,pass:l.pass},l.submitLogin=function(){l.credentials=e.query(function(){l.credentials.forEach(function(t){l.email===t.email&&l.pass===t.pass?n():a()})});var n=function(){t.go("app")},a=function(){$("p.errorLogin").css({display:"block"})};$("input").val("")}}angular.module("app.login",[]).controller("LoginController",t),t.$inject=["$state","Login"]}(),function(){"use strict";function t(){}angular.module("app.main",[]).controller("MainController",t)}(),function(){"use strict";function t(t,e,l,n,a){var o=this;o.menuList=t.query(),o.projectList=e.query(),o.projectLabel=l.query(),o.projectFilter=n.query()}function e(){function t(t,e,l){e.on("click",function(){var t=$(".content .closeBtn").find("span");$(".wrapper").toggleClass("panelAnimates"),t.html("Close"==t.text()?"Open":"Close")})}var e={link:t,restrict:"A"};return e}angular.module("app.menu",[]).controller("MenuController",t).directive("elmPanel",e),t.$inject=["Menulist","Projectlist","Projectlabel","Projectfilter","$stateParams"]}(),function(){"use strict";function t(){var t=this;t.time=new Date}angular.module("app.utility",[]).controller("UtilitiesController",t)}(),function(){"use strict";function t(t){t.state("app.all",{url:"/alltask/:id",views:{"utilities@app":{templateUrl:"html/utilities/utilities.index.html",controller:"UtilitiesController",controllerAs:"utilities"},"main@app":{params:["id"],templateUrl:"html/main/main.all/all.index.html",controller:"AlltaskController",controllerAs:"todo"}}})}function e(t,e,l){var n=this;n.numberCurrent=0,n.pageSize=3,n.allTasks=t.query(),n.numberOfPages=function(){return Math.ceil(n.allTasks.length/n.pageSize)},n.removeTask=function(e){t["delete"]({},{id:e.id},function(){n.allTasks=t.query()})},n.editTask=function(t){l.addIdData(t.id),e.go("app.edit")}}angular.module("app.alltodo",["app.alltodo.create","app.alltodo.edit"]).config(t).controller("AlltaskController",e),t.$inject=["$stateProvider"],e.$inject=["Alltasks","$state","isId"]}(),function(){"use strict";function t(t,e){t.state("app.next",{url:"/next/:id",views:{"utilities@app":{templateUrl:"html/utilities/utilities.index.html",controller:"UtilitiesController",controllerAs:"utilities"},"main@app":{templateUrl:"html/main/main.taskSeven/seven.index.html",controller:"NextController",controllerAs:"next"}}})}function e(){}angular.module("app.next",[]).config(t).controller("NextController",e),t.$inject=["$stateProvider","$urlRouterProvider"]}(),function(){"use strict";function t(t,e){t.state("app.today",{url:"/today",views:{"utilities@app":{templateUrl:"html/utilities/utilities.index.html",controller:"UtilitiesController",controllerAs:"utilities"},"main@app":{templateUrl:"html/main/main.today/today.index.html",controller:"TodayController",controllerAs:"today"}}})}function e(){}angular.module("app.today",[]).config(t).controller("TodayController",e),t.$inject=["$stateProvider","$urlRouterProvider"]}(),function(){"use strict";function t(t){t.state("app.create",{url:"/alltask/create",views:{"overlay@":{templateUrl:"/html/main/main.all/create.all/create.all.html",controller:"CreatetodoController",controllerAs:"createTodo"},"main@app":{templateUrl:"html/main/main.all/all.index.html",controller:"AlltaskController",controllerAs:"todo"}}})}function e(t,e){var l=this;l.submitted=!1,l.priority=e.query(),l.createTask=function(){l.formAddTasks.$valid?(l.data={},l.data={project:l.project,label:l.label,name:l.name,dateNum:l.dateNum,headerComment:l.headerComment,comment:l.comment},t.save(l.data),$("form").find("input").val(""),$("p.msg-error").removeClass("msg-error")):($("form").find("p").addClass("msg-error"),l.submitted=!0)},l.resetVal=function(){$("form").find("input").val("")}}angular.module("app.alltodo.create",["app.alltodo"]).config(t).controller("CreatetodoController",e),t.$inject=["$stateProvider"],e.$inject=["Alltasks","Projectlabel"]}(),function(){"use strict";function t(t){t.state("app.edit",{url:"/alltask/edit",views:{"overlay@":{templateUrl:"/html/main/main.all/edit.all/edit.all.html",controller:"EdittodoController",controllerAs:"editTodo"},"main@app":{templateUrl:"html/main/main.all/all.index.html",controller:"AlltaskController",controllerAs:"todo"}}})}function e(t,e,l){var n=this,a=t.getIdData();n.idEdit=a[0],n.task=e.get({},{id:a[0]}),n.editTask=function(){n.newTask={id:a[0],project:n.task.project,label:n.task.label,name:n.task.name,dateNum:n.task.dateNum,headerComment:n.task.headerComment,comment:n.task.comment},n.newTask.dateNum=new Date(n.task.dateNum),e.update(n.newTask),l.go("app.all")},n.cancelEdit=function(){l.go("app.all")}}angular.module("app.alltodo.edit",["app.alltodo"]).config(t).controller("EdittodoController",e),t.$inject=["$stateProvider"],e.$inject=["isId","Alltasks","$state"]}();
//# sourceMappingURL=data:application/json;base64,